<style lang="scss">
  .f2-canvas {
    width: 100%;
    height: 100%;
  }

</style>
<template>
  <canvas
    type="2d"
    class="f2-canvas"
    bindtouchstart="touchStart"
    bindtouchmove="touchMove"
    bindtouchend="touchEnd"
  >
  </canvas>
</template>
<script>
  import wepy from '@wepy/core'
  import WxCanvas from '../lib/WxCanvas'
  import F2 from '@antv/f2'
  function wrapEvent(e) {
    if (!e) return
    if (!e.preventDefault) {
      e.preventDefault = function() {}
    }
    return e
}
  wepy.component({
    props: {
      onInit: {
        type: 'Function',
        value: () => {}
      },
      lazyLoad: {
        type: Boolean,
        default: false
      }
    },
    data: {

    },
    ready() {
      const query = wx.createSelectorQuery().in(this.$wx)
      query.select('.f2-canvas')
        .fields({
          node: true,
          size: true
        })
        .exec(res => {
          const { node, width, height } = res[0]
          const context = node.getContext('2d')
          const pixelRatio = wx.getSystemInfoSync().pixelRatio
          // 高清设置
          node.width = width * pixelRatio
          node.height = height * pixelRatio

          const config = { context, width, height, pixelRatio }
          const chart = this.onInit(F2, config)
          if (chart) {
            this.chart = chart
            this.canvasEl = chart.get('el')
          }
        })
    },
    methods: {
      touchStart(e) {
        const canvasEl = this.canvasEl
        if (!canvasEl) {
          return
        }
        canvasEl.dispatchEvent('touchstart', wrapEvent(e))
      },
      touchMove(e) {
        const canvasEl = this.canvasEl
        if (!canvasEl) {
          return
        }
        canvasEl.dispatchEvent('touchmove', wrapEvent(e))
      },
      touchEnd(e) {
        const canvasEl = this.canvasEl
        if (!canvasEl) {
          return
        }
        canvasEl.dispatchEvent('touchend', wrapEvent(e))
      }
    }
  })
</script>
