<template>
  <div class="seckill-add page-wrap">
    <wzw-im-tip ref="wzwImTip"></wzw-im-tip>
    <err-msg :errs="formCheckResult"></err-msg>
    <block v-if="pro_id">
      <div  class="flex  product-mbx" @click="openPop('product')">
<!--        <fun-img class="thumbs" :src="selectValue.ImgPath"></fun-img>-->
        <div class="thumbs">
          <image :src="selectValue.ImgPath" style="width: 100%;height: 100%;"></image>
        </div>
        <div class="info">
          <div class="title-my">
            {{selectValue.Products_Name}}
          </div>
          <div class="fz-13 c6">
            现价：<span class="color-my m-r-4">¥</span> <span class="color-my fz-16">{{selectValue.Products_PriceX}}</span>
          </div>
        </div>
      </div>
    </block>
    <block v-else>
      <div style="width: 750rpx;height: 50rpx;"></div>
      <div class="submits flex flex-vertical-center flex-justify-center" @click="openPop('product')">
        <icon type="iconadd" color="#00A8FF"  size="20"  class="m-r-9"></icon>
        选择商品
      </div>
    </block>
    <block v-if="pro_id&&selectValue.Products_Type!==0">
      <div class="submitq flex flex-vertical-center flex-justify-center" @click="goAdd">
        <icon type="iconadd" color="#00A8FF"  size="20"  class="m-r-2"></icon>
        设置商品的型号
      </div>
    </block>


    <div class="store-item flex flex-vertical-center" >
      <div  class="titles">
        排序
      </div>
      <div class="flex flex1 fz-13" >
        <input type="number" v-model="sort"  class="flex flex1 p-l-26" placeholder="请输入1-9999" min="0" max="9999" placeholder-class="place"/>
      </div>
    </div>
    <div class="store-item flex flex-vertical-center" >
      <div  class="titles">
        赠品名称
      </div>
      <div class="flex flex1 fz-13" >
        <input type="text" v-model="gift_name"  class="flex flex1 p-l-26" placeholder="请输入赠品名称"  placeholder-class="place"/>
      </div>
    </div>

    <div class="store-item flex flex-vertical-center">
      <div  class="titles">
        领取有效期
      </div>
      <div class="flex flex1 fz-13" >
        <input type="number"  v-model="valid_days" class="flex flex1 p-l-26" placeholder="请输入领取有效期"  placeholder-class="place"/>
        天
      </div>
    </div>
    <div class="store-item flex flex-vertical-center">
      <div  class="titles">
        限领次数
      </div>
      <div class="flex flex1 fz-13" >
        <input type="number"  v-model="limit_times" class="flex flex1 p-l-26" placeholder="请输入限领次数0为不限次"  placeholder-class="place"/>
        次
      </div>
    </div>
    <div class="store-item flex flex-vertical-center flex-justify-between">
      <div  class="titles">
        需要物流
      </div>
      <switch :checked="is_shipping==1"  bindchange="switch1Change"/>
    </div>
    <div class="store-item flex flex-vertical-center flex-justify-between" @click="$openPop('myModal')"  v-if="is_shipping==1">
      <div  class="titles"  >
        配送方式
      </div>
      <div class="fz-14 c9">
        {{shipping_type===2?'固定费用':'物流模板'}}
        <icon  type="iconarrowleft" size="16"  color="#999"></icon>
      </div>
    </div>
    <div class="store-item flex flex-vertical-center" v-if="shipping_type==1">
      <div  class="titles">
        赠品重量
      </div>
      <div class="flex flex1 fz-13" >
        <input type="number"  v-model="weight" class="flex flex1 p-l-26" placeholder="请输入赠品重量"  placeholder-class="place"/>
        kg
      </div>
    </div>




    <!--占住底部的位置-->
    <div class="safearea-box fixed bgwhite"></div>
    <!--放置页面底部内容被挡住，额外给的高度-->
    <div class="safearea-box"></div>
    <!--action-btn全局有样式-->
    <div class="btn action-btn btn-primary fz-16"  @click="addSeckill">
      确定
    </div>

    <popup-layer title="配送方式" ref="myModal" :autoClose="true">
      <radio-group class="type-list p-l-10 p-r-10"  @change="setFeeType">
        <label class="type-item flex flex-vertical-center fz-14">
          <radio color="#00A8FF" value="0" :checked="shipping_type === 2" />
          <div class="label p-10 flex flex-vertical-center">
            <div class="title m-r-15">固定费用</div>
            <input type="digit" v-model="shipping_price"  class="input-price fz-12 m-r-5"/>
            元
          </div>
        </label>
        <label class="type-item flex flex-vertical-center fz-14">
          <radio color="#00A8FF" value="1" :checked="shipping_type === 1" />
          <div class="label p-10 flex flex-vertical-center">
            <div class="title m-r-15">物流模板</div>
            <div class="title m-r-15">{{Template_Name}}</div>
            <div class="select-pro" @click="selectPro">
              选择模板
            </div>
          </div>
        </label>
      </radio-group>
      <button class="btn btn-primary m-t-35" @click="closePop('myModal')">确认</button>
    </popup-layer>

    <popup-layer title="选择物流模板" ref="give" :autoClose="true">
      <block v-for="(item,index) of emsData" :key="index">
        <div class="give-list flex flex-vertical-center p-l-10 fz-14" @click="changeCheck(index)">
          <div >
            <icon
              class="check-icon"
              :color="item.check?'#F53636':'#999'"
              size="20"
              :type="item.check?'iconblchecked':'iconCircle'"
            ></icon>
          </div>
          <div class="m-l-10">
            {{item.Template_Name}}
          </div>
        </div>
      </block>
      <button class="btn btn-primary m-t-35" @click="sureGive">确认</button>
    </popup-layer>

    <popup-layer title="选择商品" ref="product" :autoClose="true">
      <div class="product-list">

        <div class="product-item" v-for="(product,idx) in proData" :key="idx">
          <template v-if="product.Products_Status===1">
            <div class="info-box" @click="taggleProductCheck(idx)">
              <div class="check"   >
                <div v-show="!product.disalbed">
                  <icon
                    class="check-icon"
                    :color="product.check?'#F53636':'#999'"
                    size="20"
                    :type="product.check?'iconblchecked':'iconCircle'"
                  ></icon>
                </div>
                <div v-show="product.disalbed">
                  <icon
                    class="check-icon"
                    color="#eee"
                    size="20"
                    type="iconblchecked"
                  ></icon>
                </div>

              </div>
              <image class="thumb" :src="product.ImgPath"></image>
              <div class="info">
                <div class="title">{{product.Products_Name}}</div>
                <div class="price-box">
                  <span class="sign">￥</span>
                  <span>{{product.Products_PriceY}}</span>
                  <span class="p-l-20 p-r-4 fz-12 color-gray">拼购价:</span>
                  <span class="sign">￥</span>
                  <span>{{product.Products_PriceX}}</span>
                </div>
                <div class="stock-box">
                  <span class="stock">库存:{{product.Products_Count}}</span>
                  <span class="sale p-l-40">销量:{{product.Products_Sales}}</span>
                </div>
              </div>
            </div>
          </template>
        </div>
      </div>
      <button class="btn btn-primary m-t-35" @click="surePro">确认</button>
    </popup-layer>

  </div>
</template>

<script>
  import wepy from '@wepy/core'
  import store from '../../store'
  import pageMixin from '../../mixins'
  import { ls, validateFun } from '../../common/helper'
  import { bizProdList, getShippingTemplate, getShopGiftInfo, opBizGift } from '../../api/product'
  import { back, hideLoading, linkTo, showLoading, toast } from '../../common/fun'

  const moment = require('moment')

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      Template_Name: '',
      weight: '',
      is_shipping: 0,
      sort: '',
      gift_name: '',
      valid_days: '',
      limit_times: '',
      shipping_price: '',
      shipping_id: '',
      emsData: [],
      shipping_type: 2,
      array: ['固定运费', '系统模板'],
      mbx: [],
      formCheckResult: '',
      id: '',
      proData: [],
      pro_id: '',
      selectValue: [],
      editData: {}
    },
    onUnload() {
      ls.remove('skuvaljosn')
    },
    methods: {
      switch1Change(e) {
        let boo = e.$wx.detail.value

        if (boo) {
          this.is_shipping = 1
        } else {
          this.is_shipping = 0
        }
      },
      sureGive() {
        this.$closePop('give')
        this.emsData.map(item => {
          item.check && (this.shipping_id = item.Template_ID)
        })
      },
      changeCheck(index) {
        this.emsData.map(item => {
          item.check = false
        })
        this.emsData[index].check = !this.emsData[index].check
        this.Template_Name = this.emsData[index].Template_Name
      },
      selectPro() {
        this.$closePop('myModal')
        this.$openPop('give')
      },
      setFeeType(e) {
        this.shipping_type = parseInt(e.$wx.detail.value)
        if (this.shipping_type === 1) {
          this.$closePop('myModal')
          this.$openPop('give')
        }
      },
      addSeckill() {
        let skuvaljosn = ls.get('skuvaljosn')
        let selectSku = {}
        if (this.selectValue.Products_Type != 0) {
          if (skuvaljosn) {
            for (let item in skuvaljosn) {
              if (skuvaljosn[item].check) {
                selectSku = skuvaljosn[item]
              }
            }
          } else {
            let arr = this.editData.attr_id
            for (let item in this.selectValue.skuvaljosn) {
              if (this.selectValue.skuvaljosn[item].Product_Attr_ID == arr) {
                selectSku = this.selectValue.skuvaljosn[item]
              }
            }
          }
        }

        let data = {
          gift_name: this.gift_name,
          valid_days: this.valid_days,
          limit_times: this.limit_times,
          is_shipping: this.is_shipping,
          shipping_type: this.shipping_type,
          sort: this.sort
        }
        const rule = {
          limit_times: {
            required: false
          },
          gift_name: {
            required: true,
            message: {
              required: '赠品名称必填'
            }
          },
          sort: {
            required: true,
            message: {
              required: '排序必填'
            }
          },
          valid_days: {
            required: true,
            message: {
              required: '领取有效期必填'
            }
          },
          is_shipping: {
            required: false
          },
          shipping_type: {
            required: false
          }
        }
        const checkRt = validateFun(data, rule)
        if (checkRt !== true) {
          this.formCheckResult = checkRt
          return
        }
        if (this.shipping_type == 2) {
          data.shipping_price = this.shipping_price
        } else {
          data.weight = this.weight
          data.shipping_id = this.shipping_id
        }
        let obj = {
          pro_id: this.pro_id
        }
        if (this.selectValue.Products_Type != 0) {
          if (!selectSku.Attr_Value) {
            this.formCheckResult = ['请设置赠品规格']
            return
          }
          obj.attr_id = selectSku.Product_Attr_ID
          obj.attr_txt = selectSku.Attr_Value.mobile_prod_attr_name
        }
        data.select_str = JSON.stringify(obj)

        if (this.id) {
          data.id = this.id
        }
        opBizGift(data).then(res => {
          if (this.id) {
            toast('保存成功')
          } else {
            toast('编辑成功')
          }
          ls.remove('skuvaljosn')
          setTimeout(function() {
            back()
          }, 1000)
        }).catch(e => {

        })
      },
      goAdd() {
        let arr = ls.get('skuvaljosn')
        if (!arr) {
          for (let it in this.selectValue.skuvaljosn) {
            if (this.selectValue.skuvaljosn[it].Product_Attr_ID == this.editData.attr_id) {
              this.selectValue.skuvaljosn[it].check = true
            }
          }

          ls.set('skuvaljosn', this.selectValue.skuvaljosn)
        }

        linkTo('/pages/marketing/GiveAddSelect')
      },
      upStartTime(val) {
        const formatRt = moment(val).format('YYYY-MM-DD HH:mm:ss')
        this.start_time = formatRt
      },
      upEndTime(val) {
        const formatRt = moment(val).format('YYYY-MM-DD HH:mm:ss')
        this.end_time = formatRt
      },
      // closePopup() {
      //   this.closePop('product')
      //   this.proData = this.proData.map(item => {
      //     return {...item, check: false}
      //   })
      //   this.pro_id = ''
      // },
      surePro() {
        this.closePop('product')
        let that = this
        this.proData.map(item => {
          if (item.check) {
            that.selectValue = item
            if (item.Products_ID != that.pro_id) {
              ls.remove('skuvaljosn')
            }
            that.pro_id = item.Products_ID
          }
        })
      },
      taggleProductCheck(idx) {
        this.proData = this.proData.map(item => {
          return {...item, check: false}
        })
        this.proData[idx].check = true
      },
      openPop(name) {
        this.$refs[name].show()
      },
      closePop(name) {
        this.$refs[name].close()
      },
      getMbx() {
        showLoading('加载中')
        getShopGiftInfo({id: this.id }).then(res => {
          this.editData = res.data
          for (let item of this.proData) {
            console.log(item, this.editData.product_id, 'ss')
            if (item.Products_ID == this.editData.product_id) {
              this.selectValue = item
              item.check = true
              this.pro_id = item.Products_ID
            }
          }
          this.gift_name = this.editData.gift_name
          this.valid_days = this.editData.valid_days
          this.limit_times = this.editData.limit_times
          this.sort = this.editData.sort
          this.weight = this.editData.weight
          this.shipping_price = this.editData.shipping_price
          let shipping = JSON.parse(this.editData.shipping)
          if (shipping) {
            this.is_shipping = 1
            this.shipping_type = parseInt(shipping.type)

            this.shipping_id = shipping.shipping_id
            if (this.shipping_type == 1) {
              this.weight = shipping.value
              this.emsData.map(item => {
                item.Template_ID == this.shipping_id ? item.check = true : item.check = false
              })
            } else {
              this.shipping_price = shipping.value
            }
          }

          hideLoading()
        }).catch(e => { hideLoading() })
      },
      async init() {
        showLoading('加载中')
        let reqData = await bizProdList({page: 1, pageSize: 999}).catch(() => {})
        this.proData = reqData.data.map(item => {
          return {...item, check: false}
        })

        let resData = await getShippingTemplate().catch(() => {})
        this.emsData = resData.data.map(item => {
          return {...item, check: false}
        })
        if (this.emsData.length > 0) {
          this.emsData[0].check = true
        }

        if (this.id) {
          this.getMbx()
        } else {
          hideLoading()
        }
      }
    },
    onLoad(options) {
      if (options.id) {
        this.id = options.id
      }
      this.init()
    }

  })

</script>
<style lang="scss">
  /*@import "../../assets/variables.scss";*/
  /*@import "../../assets/mixins.scss";*/

  .page-wrap{
    padding-bottom: 44px;
  }

  .picker{
    height: 110rpx;
    line-height: 110rpx;
    flex: 1;
    text-align: right;
  }
  .seckill-add{
    height: 100vh;
    background-color: #FFFFFF;
  }
  .submits{
    margin: 0rpx auto 50rpx;
    width: 320rpx;
    height: 60rpx;
    background-color: #FFFFFF;
    border: 1px solid #00A8FF;
    border-radius: 6rpx;
    color: #00A8FF;
    font-size: 28rpx;
    line-height: 60rpx;
  }
  .select-pro{
    font-size: 24rpx;
    color: #00A8FF;
  }
  .submitq{
    margin: 60rpx auto;
    width: 360rpx;
    height: 60rpx;
    background-color: #FFFFFF;
    border: 1px solid #00A8FF;
    border-radius: 6rpx;
    color: #00A8FF;
    font-size: 28rpx;
    line-height: 60rpx;
  }
  .store-item{
    height: 110rpx;
    width: 710rpx;
    padding: 0rpx 20rpx;
    border-bottom: 1px solid #EBEBEB;
  }
  .titles{
    font-size: 28rpx;
    color: #333333;
  }
  .place{
    color: #CAC8C8;
  }
  .store-titles{
    display: flex;
    align-items: center;
    color: #999999;
    font-size: 26rpx;
  }

  .product-mbx{
    width: 750rpx;
    box-sizing: border-box;
    height: 230rpx;
    padding: 40rpx 20rpx;
  }
  .thumbs{
    width: 150rpx;
    height: 150rpx;
    margin-right: 24rpx;
  }
  .color-my{
    color: #FF0000;
  }
  .title-my{
    color: #333;
    font-size: 14px;
    /*font-weight: bold;*/
    line-height: 20px;
    height: 40px;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-bottom: 38rpx;
  }
  .content{

    text-align: left;
    height: 110rpx;
    line-height: 110rpx;
  }
  /*商品列表 start*/
  .product-list{
    height: 800rpx;
    overflow: scroll;
  }
  .product-item{
    padding: 30rpx 0;
    background: white;
    margin-bottom: 20rpx;
    .info-box{
      padding: 0 20rpx;
      display: flex;
      font-size: 14px;
      height: 176rpx;
      .check{
        padding-right: 20rpx;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        .check-icon{

        }
      }
      .thumb{
        width: 176rpx;
        height: 176rpx;
        background: #f2f2f2;
      }
      .info{
        flex: 1;
        padding-left: 20rpx;
        .title{
          color: #333;
          font-size: 14px;
          /*font-weight: bold;*/
          line-height: 20px;
          height: 40px;
          overflow: hidden;
          text-overflow: ellipsis;
          margin-bottom: 8px;
        }
        .price-box{
          color: $fun-red-color;
          margin-bottom: 10px;
          font-size: 14px;
        }
        .stock-box{
          font-size: 12px;
          color: #888;
        }
      }
    }
    .actions{
      margin-top: 30rpx;
      font-size: 12px;
      display: flex;
      .action{
        justify-content: center;
        padding: 0;
        flex: 1;
        display: flex;
        align-items: center;
        color: #888;
        border-right: 1rpx solid #e7e7e7;
        &:last-child{
          border-right: none;
        }
        .title{
          padding-left: 8px;
        }
      }
    }
  }
  /*商品列表 end*/
  .input-price{
    width: 440rpx;
    height: 56rpx;
    line-height: 56rpx;
    padding-left: 10px;
    box-sizing: border-box;
    border: 1px solid #eeeeee;
  }
  .give-list{
    height: 60rpx;
    line-height: 60rpx;
  }

</style>
<config>
  {
  "navigationBarTitleText": "添加赠品",
  "navigationBarTextStyle": "black",
  "navigationBarBackgroundColor": "#fff",
  "usingComponents": {
    "wzw-im-tip": "~@/components/wzw-im-tip",
  "fun-img": "~@/components/fun-img",
  "err-msg": "~@/components/err-msg",
  "icon": "~@/components/icon",
  "popup-layer": "~@/components/popup-layer",
  "time": "~@/components/time",
  }
  }
</config>
