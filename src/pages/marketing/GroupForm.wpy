<template>
  <div class="seckill-add page-wrap">
    <wzw-im-tip ref="wzwImTip"></wzw-im-tip>
    <err-msg :errs="formCheckResult"></err-msg>
      <block v-if="pro_id">
        <div  class="flex  product-mbx" @click="openPop('product')">
            <div class="thumbs" :style="{backgroundImage:'url('+selectValue.ImgPath+')'}">
            </div>
            <div class="info">
              <div class="title-my">
                {{selectValue.Products_Name}}
              </div>
              <div class="fz-13 c6">
                原价：<span class="color-my m-r-4">¥</span> <span class="color-my fz-16">{{selectValue.Products_PriceX}}</span>
              </div>
            </div>
        </div>
      </block>
      <block v-else>
        <div style="width: 750rpx;height: 50rpx;"></div>
        <div class="submits flex flex-vertical-center flex-justify-center" @click="openPop('product')">
          <icon type="iconadd" color="#00A8FF"  size="20"  class="m-r-9"></icon>
          选择商品
        </div>
      </block>


    <div class="store-item flex flex-vertical-center">
      <div  class="titles">
        拼团价格
      </div>
      <div class="flex flex1 fz-13" >
        <input type="digit" v-model="pintuan_pricex"  class="flex flex1 p-l-26" placeholder="请输入拼团价格"  placeholder-class="place"/>
        元
      </div>
    </div>
    <div class="store-item flex flex-vertical-center"  >
      <div  class="titles">
        拼团人数
      </div>
      <div class="flex flex1 fz-13" >
        <input type="number" v-model="pintuan_people"  class="flex flex1 p-l-26" placeholder="请输入拼团人数"  placeholder-class="place"/>
        人成团
      </div>
    </div>


    <!--占住底部的位置-->
    <div class="safearea-box fixed bgwhite"></div>
    <!--放置页面底部内容被挡住，额外给的高度-->
    <div class="safearea-box"></div>
    <!--action-btn全局有样式-->
    <div class="fz-16 btn action-btn btn-primary"  @click="subFn">
      确定
    </div>


    <popup-layer title="选择商品" ref="product" :autoClose="true">
      <div class="product-list">
        <template v-for="(product,idx) in proData" :key="idx">
          <div class="product-item" v-if="product.Products_Status===1 && product.is_pintuan == 0">
            <!--只显示不拼团的-->
            <div class="info-box"  @click="taggleProductCheck(idx)">
              <div class="check"   >
                <div v-show="!product.disalbed">
                  <icon
                    class="check-icon"
                    :color="product.check?'#F53636':'#999'"
                    size="20"
                    :type="product.check?'iconblchecked':'iconCircle'"
                  ></icon>
                </div>
                <div v-show="product.disalbed">
                  <icon
                    class="check-icon"
                    color="#eee"
                    size="20"
                    type="iconblchecked"
                  ></icon>
                </div>

              </div>
              <image class="thumb" :src="product.ImgPath"></image>
              <div class="info">
                <div class="title">{{product.Products_Name}}{{product.Products_ID}}</div>
                <div class="price-box">
                  <span class="sign">￥</span>
                  <span>{{product.Products_PriceY}}</span>
                  <span class="p-l-20 p-r-4 fz-12 color-gray">拼购价:</span>
                  <span class="sign">￥</span>
                  <span>{{product.Products_PriceX}}</span>
                </div>
                <div class="stock-box">
                  <span class="stock">库存:{{product.Products_Count}}</span>
                  <span class="sale p-l-40">销量:{{product.Products_Sales}}</span>
                </div>
              </div>
            </div>
          </div>
        </template>

      </div>
      <button class="btn btn-primary m-t-35" @click="surePro">确认</button>
    </popup-layer>

  </div>
</template>

<script>
  import wepy from '@wepy/core'
  import store from '../../store'
  import pageMixin from '../../mixins'
  import { ls, validateFun } from '../../common/helper'
  import {
    bizFlashsaleDetail,
    bizOperateFlashsale,
    bizProdList,
    getProductDetail,
    systemOperateProd
  } from '../../api/product'
  import { back, error, hideLoading, linkTo, showLoading, toast } from '../../common/fun'
  import { floatNumber, intNumber } from '@/common/regs'

  const moment = require('moment')

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      pintuan_pricex: '',
      pintuan_people: '',
      mbx: [],
      formCheckResult: '',
      id: '',

      proData: [],
      pro_id: '',
      selectValue: null,
      editData: {}
    },
    onUnload() {

    },
    methods: {
      subFn() {
        if (!this.selectValue) {
          error('请先选择商品')
          return
        }

        const formData = {
          prod_id: this.pro_id,
          pintuan_pricex: this.pintuan_pricex,
          pintuan_people: this.pintuan_people
        }
        const rule = {
          // 如果拼团价格为0，则不校验拼团人数了
          pintuan_people: {
            match: intNumber,
            required: true,
            size: {min: 2},
            message: {
              required: '拼团人数必填',
              match: '拼团人数必须为数字',
              size: '拼团人数必须不低于2'
            }
          },
          pintuan_pricex: {
            match: floatNumber,
            required: true,
            size: {min: 0},
            use: {
              compareMarketPrice: (val, row) => {
                return parseFloat(val) < parseFloat(this.selectValue.Products_PriceY)
              }
            },
            message: {
              required: '拼团价必填',
              match: '拼团价必须为数字',
              size: '拼团价必须大于0',
              compareMarketPrice: '拼团价必须小于原价'
            }
          },
          select_prod: {
            required: false
          }
        }
        const checkRt = validateFun(formData, rule)
        if (checkRt !== true) {
          this.formCheckResult = checkRt
          return
        }
        if (!this.pro_id) {
          this.formCheckResult = ['请选择商品']
          return
        }

        systemOperateProd(formData).then(res => {
          toast('操作成功')

          setTimeout(() => {
            back()
          }, 1000)
        }).catch(e => {

        })
      },

      upStartTime(val) {
        const formatRt = moment(val).format('YYYY-MM-DD HH:mm:ss')
        this.start_time = formatRt
      },
      upEndTime(val) {
        const formatRt = moment(val).format('YYYY-MM-DD HH:mm:ss')
        this.end_time = formatRt
      },
      // closePopup() {
      //   this.closePop('product')
      //   this.proData = this.proData.map(item => {
      //     return {...item, check: false}
      //   })
      //   this.pro_id = ''
      // },
      surePro() {
        this.closePop('product')
        let that = this
        this.proData.map(item => {
          if (item.check) {
            that.selectValue = item
            if (item.Products_ID != that.pro_id) {
              ls.remove('skuvaljosn')
            }
            that.pro_id = item.Products_ID
          }
        })
      },
      taggleProductCheck(idx) {
        this.proData = this.proData.map(item => {
          return {...item, check: false}
        })
        this.proData[idx].check = true
      },
      openPop(name) {
        this.$refs[name].show()
      },
      closePop(name) {
        this.$refs[name].close()
      },
      getCurrentInfo() {
        showLoading('加载中')
        getProductDetail({prod_id: this.id }).then(res => {
          this.editData = res.data
          this.pintuan_pricex = this.editData.pintuan_pricex
          this.pintuan_people = this.editData.pintuan_people

          for (let item of this.proData) {
            if (item.Products_ID === this.editData.Products_ID) {
              this.selectValue = item
              item.check = true
              this.pro_id = item.Products_ID
            }
          }
          hideLoading()
        }).catch(e => { hideLoading() })
      },
      async init() {
        showLoading('加载中')
        let reqData = await bizProdList({page: 1, pageSize: 999}).catch(() => {})
        this.proData = reqData.data.map(item => {
          return {...item, check: false}
        })

        if (this.id) {
          this.getCurrentInfo()
        } else {
          hideLoading()
        }
      }
    },
    onLoad(options) {
      if (options.id) {
        this.id = options.id
      }
      this.init()
    }

  })

</script>
<style lang="scss">

  .page-wrap{
    padding-bottom: 44px; //.btn的是44px
  }
  .seckill-add{
    min-height: 100vh;
    background-color: #FFFFFF;
  }
  .submits{
     margin: 0rpx auto 50rpx;
     width: 320rpx;
     height: 60rpx;
     background-color: #FFFFFF;
     border: 1px solid #00A8FF;
     border-radius: 6rpx;
     color: #00A8FF;
     font-size: 28rpx;
     line-height: 60rpx;
   }
  .submitq{
    margin: 60rpx auto;
    width: 360rpx;
    height: 60rpx;
    background-color: #FFFFFF;
    border: 1px solid #00A8FF;
    border-radius: 6rpx;
    color: #00A8FF;
    font-size: 28rpx;
    line-height: 60rpx;
  }
  .store-item{
    height: 110rpx;
    width: 710rpx;
    padding: 0rpx 20rpx;
    border-bottom: 1px solid #EBEBEB;
  }
  .titles{
    font-size: 28rpx;
    color: #333333;
  }
  .place{
    color: #CAC8C8;
  }
  .store-titles{
    display: flex;
    align-items: center;
    color: #999999;
    font-size: 26rpx;
  }

  .product-mbx{
    width: 750rpx;
    box-sizing: border-box;
    height: 230rpx;
    padding: 40rpx 20rpx;
  }
  .thumbs{
    width: 150rpx;
    height: 150rpx;
    margin-right: 24rpx;
    @include cover-img();
  }
  .color-my{
    color: #FF0000;
  }
  .title-my{
    color: #333;
    font-size: 14px;
    /*font-weight: bold;*/
    line-height: 20px;
    height: 40px;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-bottom: 38rpx;
  }
  .content{

    text-align: left;
    height: 110rpx;
    line-height: 110rpx;
  }
  /*商品列表 start*/
  .product-list{
    height: 800rpx;
    overflow: scroll;
  }
  .product-item{
    padding: 30rpx 0;
    background: white;
    margin-bottom: 20rpx;
    .info-box{
      padding: 0 20rpx;
      display: flex;
      font-size: 14px;
      height: 176rpx;
      .check{
        padding-right: 20rpx;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        .check-icon{

        }
      }
      .thumb{
        width: 176rpx;
        height: 176rpx;
        background: #f2f2f2;
      }
      .info{
        flex: 1;
        padding-left: 20rpx;
        .title{
          color: #333;
          font-size: 14px;
          /*font-weight: bold;*/
          line-height: 20px;
          height: 40px;
          overflow: hidden;
          text-overflow: ellipsis;
          margin-bottom: 8px;
        }
        .price-box{
          color: $fun-red-color;
          margin-bottom: 10px;
          font-size: 14px;
        }
        .stock-box{
          font-size: 12px;
          color: #888;
        }
      }
    }
    .actions{
      margin-top: 30rpx;
      font-size: 12px;
      display: flex;
      .action{
        justify-content: center;
        padding: 0;
        flex: 1;
        display: flex;
        align-items: center;
        color: #888;
        border-right: 1rpx solid #e7e7e7;
        &:last-child{
          border-right: none;
        }
        .title{
          padding-left: 8px;
        }
      }
    }
  }
  /*商品列表 end*/


</style>
<config>
  {
  "navigationBarTitleText": "添加拼团商品",
  "navigationBarTextStyle": "black",
  "navigationBarBackgroundColor": "#fff",
  "usingComponents": {
    "wzw-im-tip": "~@/components/wzw-im-tip",
  "err-msg": "~@/components/err-msg",
    "icon": "~@/components/icon",
    "popup-layer": "~@/components/popup-layer",
    "time": "~@/components/time",
  }
  }
</config>
