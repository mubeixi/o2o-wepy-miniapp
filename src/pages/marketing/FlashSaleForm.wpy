<style lang="scss">
  @import "../../assets/app.scss";
  @import "../../assets/mixins.scss";

  .form{
    background: #f8f8f8;
    .group-cell{
      background: white;
      .cell-item{
        .label{
          width: 220rpx;
        }
        .content{
          padding-right: 20rpx;
          text-align: left;
          .line-input{
            border:1px solid #eee;
            height: 56rpx;
            line-height: 56rpx;
            text-align: center;
            font-size: 14px;
          }
        }
      }
    }
    .safearea-space{
      height: constant(safe-area-inset-bottom);
      height: env(safe-area-inset-bottom);
    }
  }
  .add-btn{
    width: 155rpx;
    height: 56rpx;
    display: flex;
    align-items: center;
    border:1px solid #00A8FF;
    color:#00A8FF;
    border-radius: 5rpx;
    justify-content: center
  }

  /*商品列表 start*/
  .product-list{
    height: 800rpx;
    overflow: scroll;
  }
  .product-item{
    padding: 30rpx 0;
    background: white;
    margin-bottom: 20rpx;
    .info-box{
      padding: 0 20rpx;
      display: flex;
      font-size: 14px;
      height: 176rpx;
      .check{
        padding-right: 20rpx;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        .check-icon{

        }
      }
      .thumb{
        width: 176rpx;
        height: 176rpx;
      }
      .info{
        flex: 1;
        padding-left: 20rpx;
        .title{
          color: #333;
          font-size: 14px;
          /*font-weight: bold;*/
          line-height: 20px;
          height: 40px;
          overflow: hidden;
          text-overflow: ellipsis;
          margin-bottom: 8px;
        }
        .price-box{
          color: $fun-red-color;
          margin-bottom: 10px;
          font-size: 14px;
        }
        .stock-box{
          font-size: 12px;
          color: #888;
        }
      }
    }
    .actions{
      margin-top: 30rpx;
      font-size: 12px;
      display: flex;
      .action{
        justify-content: center;
        padding: 0;
        flex: 1;
        display: flex;
        align-items: center;
        color: #888;
        border-right: 1rpx solid #e7e7e7;
        &:last-child{
          border-right: none;
        }
        .title{
          padding-left: 8px;
        }
      }
    }
  }
  /*商品列表 end*/

  .goods{

    &-list{
      width: 710rpx;
      margin: 0 20rpx;
    }
    &-item{
      background: white;
      margin-bottom: 30rpx;
      padding: 20rpx;
      &:last-child{
        margin-bottom: 0;
      }
      .thumb{
        width: 150rpx;
        height: 150rpx;
        background: #f2f2f2;
      }
      .info{
        flex: 1;
        padding-left: 20rpx;
        .title{
          margin-bottom: 20px;
          line-height: 20px;
          height: 40px;
          font-size: 14px;
          overflow: hidden;
          text-overflow: ellipsis;
        }
        .price-box{
          display: flex;
          align-items: center;
          font-size: 12px;
          .selling-price{

          }
          .market-price{
            text-decoration: line-through;
          }
        }
      }
    }
  }
</style>
<template>
  <div class="page-wrap safearea bottom-btn">
    <err-msg :errs="formCheckResult"></err-msg>
    <div class="form">
      <div class="group-cell">
        <div class="cell-item">
          <div class="label">活动名称</div>
          <div class="content">
            <input type="text" v-model="formData.name" placeholder="请输入活动名称" />
          </div>
        </div>
        <div class="cell-item">
          <div class="label">每人限购(件)</div>
          <div class="content">
            <input type="number" v-model="formData.limits" placeholder="请输入限购数量,0则代表不限制" />
          </div>
        </div>
        <div class="cell-item">
          <div class="label">开始时间</div>
          <div class="content">
            <time @uptime="upStartTime"><span class="fz-12 c9">请选择时间</span></time>
          </div>
          <div class="right">
            <icon type="iconarrowleft" size="14" color="#999"></icon>
          </div>
        </div>
        <div class="cell-item">
          <div class="label">结束时间</div>
          <div class="content">
            <time @uptime="upEndTime"><span class="fz-12 c9">请选择</span></time>
          </div>
          <div class="right">
            <icon type="iconarrowleft" size="14" color="#999"></icon>
          </div>
        </div>
<!--        <div class="cell-item">-->
<!--          <div class="label">参与分销</div>-->
<!--          <div class="content">-->
<!--            <switch :animation="animation" @change="taggleDistributor" :checked="formData.is_distribute" />-->
<!--          </div>-->
<!--        </div>-->
      </div>

      <div class="m-t-20 m-b-20 flex flex-vertical-center" @click="$openPop('product')">
        <span class="fz-16 c3  m-l-20">选择商品</span>
        <div class="add-btn m-l-20"><icon color="#00A8FF" type="iconadd"></icon><span class="fz-12 p-l-4"  >添加商品</span></div>
      </div>

      <div class="goods-list">
        <div class="goods-item" v-for="(product,idx) in select_prod" :key="idx" @click="setActiveIdx(idx)">
          <div class="flex">
            <div class="thumb" :style="{backgroundImage:'url('+product.ImgPath+')'}"></div>
            <div class="info">
              <div class="title">{{product.Products_Name}}</div>
              <div class="flex flex-vertical-center flex-justify-between">
                <div class="price-box">
                  <div class="selling-price color-red"><span>￥</span><span class="fz-14">{{product.Products_PriceY}}</span></div>
                  <div class="market-price color-gray m-l-10"><span>￥</span><span class="fz-14">{{product.Products_PriceY}}</span></div>
                </div>
                <icon @click="delPro(idx)" size="18" type="iconshanchu" color="#999"></icon>
              </div>
            </div>
          </div>
          <div class="flex flex-vertical-center p-t-10 fz-14">
            <span>折扣</span>
            <input class="bor m-l-10 m-r-10 w140 fz-12 p-l-4 p-r-4" placeholder="请输入数字 0.1-9.9" type="number" min="0.1" max="9.9" @input="bindDiscountInput" /><span>折</span>
          </div>
        </div>
      </div>


    </div>

    <div class="btn action-btn btn-primary" @click="sub">
      <span class="p-l-10">确定</span>
    </div>

    <popup-layer title="选择商品" ref="product" :autoClose="true">
      <div class="product-list">
        <div class="product-item" v-for="(product,idx) in proData" :key="idx">
          <div class="info-box" @click="taggleProductCheck(idx)">
            <div class="check"   >
              <icon
                class="check-icon"
                :color="product.check?'#F53636':'#999'"
                size="20"
                :type="product.check?'iconblchecked':'iconCircle'"
              ></icon>
            </div>
            <image class="thumb" :src="product.ImgPath"></image>
            <div class="info">
              <div class="title">{{product.Products_Name}}</div>
              <div class="price-box">
                <span class="sign">￥</span>
                <span>{{product.Products_PriceY}}</span>
                <span class="p-l-20 p-r-4 fz-12 color-gray">拼购价:</span>
                <span class="sign">￥</span>
                <span>{{product.Products_PriceX}}</span>
              </div>
              <div class="stock-box">
                <span class="stock">库存:{{product.Products_Count}}</span>
                <span class="sale p-l-40">销量:{{product.Products_Sales}}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
      <button class="btn btn-primary m-t-35" @click="surePro">确认</button>
    </popup-layer>

  </div>
</template>
<script>
  import wepy from '@wepy/core'
  import store from '../../store'
  import pageMixin from '../../mixins'
  import {
    ls, confirm, validateFun, objTranslate, getArrColumn
  } from '../../common/helper'
  import { error, toast } from '../../common/fun'
  import { bizProdList } from '../../api/product'
  import { bizAddSpike } from '../../api/store'

  const moment = require('moment')

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      actIdx: 0,
      formCheckResult: [],
      proData: [],
      select_prod: [],
      formData: {
        name: '',
        start_time: '',
        end_time: '',
        limits: ''
        // is_distribute: 0
      },
      animation: {}
    },
    methods: {
      sub() {

        const rule = {
          name: {
            required: true,
            type: String,
            message: {
              required: '活动名称必填',
              type: '活动名称为字符串'
            }
          },
          limits: {
            required: true,
            match: /^\d+$/,

            message: {
              required: '限购数量必填',
              match: '限购数量必须大于等于0'
            }
          },
          start_time: {
            required: true,
            type: String,
            use: {
              after: (val, row) => moment(val).isAfter()
            },
            message: {
              required: '开始时间必选',
              type: '开始时间必须为字符串',
              after: '开始时间必须大于现在时间'
            }
          },
          // is_distribute: {
          //   required: true,
          //   enum: [0, 1],
          //   message: {
          //     required: '是否分销必须上设置',
          //     enum: '是否分销为0或1'
          //   }
          // },
          end_time: {
            required: true,
            type: String,
            use: {
              after: (val, row) => moment(val).isAfter(row.start_time)
            },
            message: {
              required: '结束时间必选',
              type: '结束时间必须为字符串',
              after: '结束时间必须在开始时间之后'
            }
          },
          select_prod: {
            required: true,
            use: {
              discount:(str)=>{
                let val = JSON.parse(str)
                console.log(str,val)
                for (let item of val) {
                  if (item.discount >= 0.1 && item.discount <= 9.9) {

                  } else {
                    return false
                  }
                }
                return true
              },
              len: (val) => val.length > 0
            },
            message: {
              required: '活动商品必选',
              discount: '商品折扣只能在0.1到9.9之间',
            }
          }
        }

        // let select_prod = [];
        // for(var item of this.select_prod){
        //   select_prod.push({prod_id: item.Products_ID, discount: item.discount ? item.discount : 0})
        // }

        let select_prod = this.select_prod.map(item => {
          return {prod_id: item.Products_ID, discount: item.discount ? item.discount : 0}
        })

        console.log(select_prod)
        const postData = {
          ...this.formData,
          select_prod: JSON.stringify(select_prod)
        }
        console.log(postData)

        const checkRt = validateFun(postData, rule)
        if (checkRt !== true) {
          this.formCheckResult = checkRt
          return
        }

        bizAddSpike(postData).then(res => {
          toast('发布成功')
          // setTimeout(() => {
          //   this.$back()
          // }, 1000)
        }).catch(() => {})
      },
      setActiveIdx(idx) {
        this.actIdx = idx
      },
      bindDiscountInput(e) {
        const discount = e.$wx.detail.value
        this.select_prod[this.actIdx].discount = discount
      },
      upStartTime(val) {
        const formatRt = moment(val).format('YYYY-MM-DD HH:mm:ss')
        this.formData.start_time = formatRt
      },
      upEndTime(val) {
        const formatRt = moment(val).format('YYYY-MM-DD HH:mm:ss')
        this.formData.end_time = formatRt
      },
      taggleDistributor(e) {
        this.formData.is_distribute = e.$wx.detail.value ? 1 : 0
      },
      surePro() {
        this.$closePop('product')
        const selects = this.proData.filter(item => item.check).map(item => {
          return {...item, prod_id: item.Products_ID, discount: ''}
        })
        this.select_prod = this.select_prod.concat(selects)
      },
      delPro(idx) {
        confirm({
          content: '是否移除该商品'
        }).then(() => {
          this.select_prod.splice(idx, 1)
        }).catch(() => {})
      },
      taggleProductCheck(idx) {
        this.proData[idx].check = !this.proData[idx].check
      },
      async _init_func() {
        let reqData = await bizProdList({page: 1, pageSize: 999}).catch(() => {})
        const hasGoodsIds = getArrColumn(this.select_prod, 'prod_id')
        this.proData = reqData.data.map(item => {
          item.check = hasGoodsIds.includes(item.Products_ID)
          return {...item}
        })
      }
    },
    onShow() {
      this._init_func()
    },
    onReady() {
      var animation = wx.createAnimation({
        duration: 100,
        timingFunction: 'ease'
      })

      this.animation = animation
      animation.scale(0.7).step()
    },
    onLoad() {

    }
  })
</script>
<config>
  {
    "navigationBarTitleText": "限时抢购",
    "navigationBarTextStyle": "black",
    "usingComponents": {
      "err-msg": "~@/components/err-msg",
      "icon": "~@/components/icon",
      "time": "~@/components/time",
      "popup-layer": "~@/components/popup-layer"
    }
  }
</config>
