<style lang="scss">

  .page-wrap {
    background-color: #f3f5f8;
    width: 750rpx;
    padding: 40rpx 20rpx;
    box-sizing: border-box;
    min-height: 100vh;
  }

  .seckill-data-list {
    flex-wrap: wrap;
    justify-content: space-around;

    &-item {
      width: 222rpx;
      height: 120rpx;
      background: rgba(255, 255, 255, 1);
      border: 1px solid rgba(219, 227, 255, 1);
      box-shadow: 0px 4rpx 12rpx 0px rgba(46, 91, 255, 0.07);
      border-radius: 6rpx;
      margin-bottom: 10px;
      box-sizing: border-box;
      padding: 0rpx 20rpx;

      &-icon {
        width: 48rpx;
        height: 48rpx;
        border-radius: 50%;
        background-color: #E1F3E0;
      }

      &-right {
        width: 100rpx;
        text-align: center;
        font-size: 10px;
        height: 120rpx;
        box-sizing: border-box;
        padding: 30rpx 0rpx;
        overflow: hidden;
        color: #8798AD;

        .seckill-data-list-number {
          font-size: 30rpx;
          height: 24rpx;
          line-height: 24rpx;
          color: #2E384D;
          margin-bottom: 18rpx;
        }
      }
    }
  }

  .icon-bg2 {
    background-color: #D9F6F9;
  }

  .icon-bg3 {
    background-color: #EEE6FF;
  }

  .seckill-data-echarts {
    width: 710rpx;
    height: 570rpx;
    margin: 20rpx auto;
    border-radius: 10rpx;
    background-color: #FFFFff;

    &-title {
      height: 100rpx;
      padding: 36rpx 30rpx;
      width: 100%;
      box-sizing: border-box;
      line-height: 28rpx;
      font-size: 30rpx;
      color: #333333;
      font-weight: bold;
    }
  }

  .swiper-echarts {
    display: block;
    width: 680rpx;
    height: 460rpx;
  }


  .pie-echarts {
    display: block;
    margin: 0 auto;
    width: 600rpx;
    height: 500rpx;
  }


</style>
<template>
  <div class="page-wrap p-b-30">
    <wzw-im-tip ref="wzwImTip"></wzw-im-tip>
    <div class="seckill-data-list flex ">
      <div class="seckill-data-list-item flex flex-vertical-center">
        <div class="seckill-data-list-item-icon flex-vertical-center flex flex-justify-center m-r-10">
          <icon type="iconyuyue" size="12" color="#33AC2E"></icon>
        </div>
        <div class="seckill-data-list-item-right">
          <div class="seckill-data-list-number">
            {{count.appoints_count}}
          </div>
          <div>
            预约人数
          </div>
        </div>
      </div>

      <div class="seckill-data-list-item flex flex-vertical-center">
        <div class="seckill-data-list-item-icon flex-vertical-center flex flex-justify-center m-r-10 icon-bg2">
          <icon type="iconliulan" size="12" color="#00C1D4"></icon>
        </div>
        <div class="seckill-data-list-item-right">
          <div class="seckill-data-list-number">
            {{count.view_person_count}}
          </div>
          <div>
            浏览人数
          </div>
        </div>
      </div>
      <div class="seckill-data-list-item flex flex-vertical-center">
        <div class="seckill-data-list-item-icon flex-vertical-center flex flex-justify-center m-r-10 icon-bg3">
          <icon type="iconcishu" size="12" color="#8B54FE"></icon>
        </div>
        <div class="seckill-data-list-item-right">
          <div class="seckill-data-list-number">
            {{count.view_count}}
          </div>
          <div>
            浏览次数
          </div>
        </div>
      </div>
      <div class="seckill-data-list-item flex flex-vertical-center">
        <div class="seckill-data-list-item-icon flex-vertical-center flex flex-justify-center m-r-10 icon-bg3">
          <icon type="iconxiadan" size="12" color="#8B54FE"></icon>
        </div>
        <div class="seckill-data-list-item-right">
          <div class="seckill-data-list-number">
            {{count.order_person_count}}
          </div>
          <div>
            下单人数
          </div>
        </div>
      </div>
      <div class="seckill-data-list-item flex flex-vertical-center">
        <div class="seckill-data-list-item-icon flex-vertical-center flex flex-justify-center m-r-10">
          <icon type="iconziyuan" size="12" color="#33AC2E"></icon>
        </div>
        <div class="seckill-data-list-item-right">
          <div class="seckill-data-list-number">
            {{count.order_pay_person_count}}
          </div>
          <div>
            支付人数
          </div>
        </div>
      </div>
      <div class="seckill-data-list-item flex flex-vertical-center">
        <div class="seckill-data-list-item-icon flex-vertical-center flex flex-justify-center m-r-10 icon-bg2">
          <icon type="iconjinrong" size="12" color="#00C1D4"></icon>
        </div>
        <div class="seckill-data-list-item-right">
          <div class="seckill-data-list-number">
            {{count.order_avg_money}}
          </div>
          <div>
            客单价
          </div>
        </div>
      </div>

    </div>


    <div class="seckill-data-echarts">
      <div class="seckill-data-echarts-title">
        时段成交分析
      </div>
      <echarts @touchendFn="bindTouchendFn" @touchstartFn="bindTouchstartFn" @touchmoveFn="bindTouchmoveFn"
               ref="catTime" :propData="data_list" :conf="charts.conf" :lazyLoad="chartReady" class="swiper-echarts"
               :onInit="onInitChart1"></echarts>
    </div>

    <div class="seckill-data-echarts">
      <div class="seckill-data-echarts-title">
        成交地域分析
      </div>
      <echarts @touchendFn="bindTouchendFn" @touchstartFn="bindTouchstartFn" @touchmoveFn="bindTouchmoveFn" ref="pie"
               :propData="addressCircles.circles" :conf="addressCircles.circlesConf" class="pie-echarts"
               :onInit="onInitChartPie"></echarts>
    </div>

  </div>
</template>
<script>
  import wepy from '@wepy/core'
  import store from '../../store'
  import pageMixin from '../../mixins'
  import { bizFlashsaleStatustic } from '../../api/store'
  import { back, error } from '../../common/fun'
  import { createF2Chart } from '../../mixins/f2'
  import { getCharCount, getTouchEventInfo, objTranslate, pageScrollToFn } from '../../common/helper'

  const moment = require('moment')

  /**
   * 求某个对象组成数组中，某个对象的值占百分比。方便配合f2-chart做饼图
   * @param item
   * @param arr
   * @param key
   * @returns {*}
   */
  function getPercent(item, arr, key = 'pay_money') {
    let arrSum = 0
    for (let row of arr) {
      arrSum += parseFloat(row[key])
    }
    console.log(arrSum, item, arr, key)
    // 如果都是0的话，大家就一起穷。
    return arrSum === 0 ? (parseInt(1 / arr.length * 100) / 100) : (parseInt(item[key] / arrSum * 100) / 100)
  }

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      moveStartY: 0,
      pageScrollTopNum: 0,
      flashsale_id: '',
      time_list: [],
      data_list: [],
      addressCircles: [],
      count: {
        'appoints_count': 0,
        'view_person_count': 0,
        'view_count': 0,
        'order_person_count': 0,
        'order_pay_count': 0,
        'order_pay_person_count': 0,
        'order_total_money': 0,
        'order_avg_money': '0'
      },
      charts: {
        name: '成交金额（单位：元）',
        type: 'line',
        yAxisIndex: '',
        conf: {}
      },
      onInitChartPie(el, config, data) {
        if (!el) return

        const { width, height } = config
        let chart = createF2Chart({
          el,
          width,
          height
        })

        console.log(config)
        const map = config.map
        const _data = data

        chart.source(_data, {
          percent: {
            formatter: function formatter(val) {
              return val * 100 + '%'
            }
          }
        })
        chart.legend({
          position: 'right',
          itemFormatter: function itemFormatter(val) {
            console.log(val + '  ' + map[val])
            return val + '  ' + map[val]
          }
        })
        chart.tooltip(true)
        chart.coord('polar', {
          transposed: true,
          radius: 0.85
        })
        chart.axis(false)
        chart.interval()
          .position('a*percent')
          .color('name', ['#1890FF', '#13C2C2', '#2FC25B', '#FACC14', '#F04864', '#8543E0'])
          .adjust('stack')
          .style({
            lineWidth: 1,
            stroke: '#fff',
            lineJoin: 'round',
            lineCap: 'round'
          })
          .animate({
            appear: {
              duration: 1200,
              easing: 'bounceOut'
            }
          })

        chart.render()

        // 注意：需要把chart return 出来
        return chart
      },
      onInitChart1(el, config, data) {
        if (!el) return

        const { width, height } = config
        let chart = createF2Chart({
          el,
          width,
          height
        })

        const _data = data

        chart.source(_data, {
          date: {
            range: [0, 1],
            type: 'timeCat',
            mask: 'HH'
          },
          value: {
            min: config.min,
            max: config.max
            // tickCount: 4
          }
        })

        chart.area().position('date*value').color('label').adjust('stack')
        chart.line().position('date*value').color('label').adjust('stack')
        chart.render()

        // 注意：需要把chart return 出来
        return chart
      }
    },
    methods: {
      bindTouchmoveFn(e) {
        // console.log(e.$wx)
        const { x, y, type } = getTouchEventInfo(e.$wx)
        // console.log(x, y, type)

        // const evalScrollTop = y - this.moveStartY + this.pageScrollTopNum // 计算最新的顶部距离
        // if (evalScrollTop < 0) return
        // pageScrollToFn(evalScrollTop)
      },
      bindTouchstartFn(e) {
        // console.log(e.$wx)

        const { x, y, type } = getTouchEventInfo(e.$wx)
        console.log(x, y, type)
        this.moveStartY = y
      },
      bindTouchendFn(e) {
        console.log(e.$wx)
        const { x, y, type } = getTouchEventInfo(e.$wx)
        console.log(x, y, type)
        var evalScrollTop = this.moveStartY - y + this.pageScrollTopNum // 计算最新的顶部距离
        console.log(evalScrollTop)
        if (evalScrollTop < 0) evalScrollTop = 0
        pageScrollToFn(this.pageScrollTopNum, evalScrollTop, 60)
      },
      async initData() {
        let { pay_time_statistic, count, address_pay_statistic } = await bizFlashsaleStatustic({ flashsale_id: this.flashsale_id }).then(res => res.data).catch(e => {
          error(e.msg || '获取秒杀失败')
        })

        this.count = count

        const vallist = Object.values(pay_time_statistic)
        this.charts.conf = {
          max: Math.max.apply(null, vallist),
          min: Math.min.apply(null, vallist)
        }

        const time_list = []
        const data_list = []
        for (var key in pay_time_statistic) {
          // 补齐时间，避免格式问题
          var timeStr = ''
          if (getCharCount(key, ':') === 0) {
            // 需要补时分秒的
            if (getCharCount(key, ' ') === 0) {
              timeStr = `${key} 00:00:00`
            } else {
              // 已经有小时了
              timeStr = `${key}:00:00`
            }
          }
          if (getCharCount(key, ':') === 1) {
            timeStr = `${key}:00`
          }
          if (getCharCount(key, ':') === 2) {
            timeStr = `${key}`
          }

          var t = moment(timeStr).format('YYYY-MM-DD HH:mm:ss')
          time_list.push(t)
          var item = {
            value: pay_time_statistic[key], // + parseInt(Math.random() * 100) + 1,
            label: '成交金额',
            date: t
          }
          data_list.push(objTranslate(item))
        }

        this.time_list = time_list
        this.data_list = data_list
        console.log(data_list)
        this.$refs.catTime.init()

        // 饼图

        const circles = address_pay_statistic.map(item => {
          // 绘制饼图时，数据集中的每一条记录中必须包含一个常量字段（并且必须是字符串类型）
          return { ...item, a: '1', name: item.address_name, percent: getPercent(item, address_pay_statistic) }
        })
        const addressCircles = {}

        addressCircles.circles = circles
        let map = {}
        for (let key in circles) {
          map[circles[key].address_name] = parseInt(circles[key].percent * 100 * 100) / 100 + '%'
        }
        addressCircles.circlesConf = { map: map } // 配置
        this.addressCircles = addressCircles
        this.$refs.pie.init()
      }
    },
    onPageScroll(e) {
      // 记录位置
      this.pageScrollTopNum = e.scrollTop
    },
    onLoad(query) {
      if (!query.flashsale_id) {
        back()
      }
      this.flashsale_id = query.flashsale_id
    },
    onShow() {
      this.initData()
    }

  })
</script>
<config>
  {
  "navigationBarTitleText": "秒杀数据",
  "navigationBarTextStyle": "black",
  "usingComponents": {
  "wzw-im-tip": "~@/components/wzw-im-tip",
  "echarts": "~@/components/echarts",
  "icon": "~@/components/icon",
  "popup-layer": "~@/components/popup-layer"
  }
  }
</config>
