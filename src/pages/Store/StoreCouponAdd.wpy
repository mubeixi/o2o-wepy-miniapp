<template>
    <div class="all page-wrap">
      <wzw-im-tip ref="wzwImTip"></wzw-im-tip>
      <div class="counpon-name">
          <div>
            优惠券名称
          </div>
          <div class="flex1" >
            <input type="text" v-model="Coupon_Subject" class="input-input" placeholder="请输入优惠券名称"  placeholder-class="place"/>
          </div>
      </div>
      <div class="line"></div>
      <div class="coupon-img flex flex-vertical-center">
        <div class="title">
          优惠券图片
        </div>
<!--        <div-->
<!--          @click="bindThumbClick(idx,img)"-->
<!--          class="img-item img"-->
<!--          v-for="(img,idx) in imgTempList"-->
<!--          :key="idx"-->
<!--          :style="{backgroundImage:'url('+img.path+')'}">-->
<!--          <span class="progress" v-if="img.task.progress<100">{{img.task.progress}}%</span>-->
<!--        </div>-->
        <block  v-for="(img,idx) in imgTempList">
          <image class="img-item img" :src="img"  @click="bindThumbClick(idx,img)"></image>
        </block>

        <div  @click="addImg"
          class="img-item add"
              v-if="imgTempList.length<1"
        >
          <icon color="#ddd" size="40" type="iconupload"></icon>
        </div>

      </div>
      <div class="line"></div>
      <div class="coupon-method flex-vertical-center flex">
        <div class="title">
          优惠方式
        </div>
        <div class="money">
          抵现金¥
        </div>
        <input type="number"  class="inputs" v-model="Coupon_Cash"/>
      </div>
      <div class="line"></div>
      <div class="coupon-method flex-vertical-center flex">
        <div class="title">
          使用条件
        </div>
        <div class="money">
          ¥
        </div>
        <input type="number"  class="inputs" v-model="Coupon_Condition"/>
        <div class="money-last">
          消费满一定金额才可以使用
        </div>
      </div>

      <div class="line"></div>
      <div class="store-item flex flex-vertical-center flex-justify-between" >
        <div class="title">
          可用次数
        </div>
        <picker class="picker-mbx" @change="bindPickerChanges" value="{{index}}" range="{{canUse}}"   range-key="name">
          {{canUse[index].name}}
          <icon  type="iconarrowleft" size="16"  color="#999"></icon>
        </picker>
      </div>
      <div class="line"></div>
      <div class="store-item flex flex-vertical-center flex-justify-between" >
        <div class="title">
          等级领取条件
        </div>
        <picker class="picker-mbx" @change="bindPickerChange" value="{{index}}" range="{{vipData}}"   range-key="level_name">
            {{vipData[ind].level_name}}
          <icon  type="iconarrowleft" size="16"  color="#999"></icon>
        </picker>
      </div>
      <div class="line"></div>
      <div class="store-item flex flex-vertical-center flex-justify-between" @click="selectUse">
        <div class="title">
          指定赠送
        </div>
        <div class="store-titles">
          {{front_show==2?'是':'否'}}
          <icon  type="iconarrowleft" size="16"  color="#999"  style="margin-left: 10rpx"></icon>
        </div>
      </div>
      <div class="line"></div>
      <div class="store-item flex flex-vertical-center flex-justify-between" @click="openPop('useFan')">
        <div class="title">
          适用范围
        </div>
        <div class="store-titles">
          {{useCan==0?'全部商品':'指定商品'}}
          <icon  type="iconarrowleft" size="16"  color="#999"></icon>
        </div>
      </div>
      <div class="line"></div>
      <div class="store-item flex flex-vertical-center flex-justify-between" >
        <div class="title">
          优惠券开始时间
        </div>
        <picker class="picker-mbx" mode="multiSelector" value="{{dateTime1}}" bindchange="changeDateTime1" bindcolumnchange="changeDateTimeColumn1" range="{{dateTimeArray1}}">
          <view class="text">
            {{startTime.length>0?(dateTimeArray1[0][dateTime1[0]] + '-' + dateTimeArray1[1][dateTime1[1]] + '-' + dateTimeArray1[2][dateTime1[2]] + ' ' + dateTimeArray1[3][dateTime1[3]] + ':' + dateTimeArray1[4][dateTime1[4]]+ ':' + dateTimeArray1[5][dateTime1[5]]):'请选择开始时间'}}
            <icon  type="iconarrowleft" size="16"  color="#999"></icon>
          </view>
        </picker>

      </div>
      <div class="line"></div>
      <div class="store-item flex flex-vertical-center flex-justify-between" >
        <div class="title">
          优惠券结束时间
        </div>
        <picker class="picker-mbx" mode="multiSelector" value="{{dateTime2}}" bindchange="changeDateTime2" bindcolumnchange="changeDateTimeColumn2" range="{{dateTimeArray2}}">
          <view class="text">
            {{endTime.length>0?(dateTimeArray2[0][dateTime2[0]] + '-' + dateTimeArray2[1][dateTime2[1]] + '-' + dateTimeArray2[2][dateTime2[2]] + ' ' + dateTimeArray2[3][dateTime2[3]] + ':' + dateTimeArray2[4][dateTime2[4]]+ ':' + dateTimeArray2[5][dateTime2[5]]):'请选择结束时间'}}
            <icon  type="iconarrowleft" size="16"  color="#999"></icon>
          </view>
        </picker>

      </div>
      <div class="line"></div>

      <!--占住底部的位置-->
      <div class="safearea-box fixed bgwhite"></div>
      <!--放置页面底部内容被挡住，额外给的高度-->
      <div class="safearea-box"></div>
      <!--action-btn全局有样式-->
      <div class="btn action-btn btn-primary" @click="saveCoupon">
        {{Coupon_ID?'保存':'新增'}}
      </div>


      <popup-layer title="选择商品" ref="pro" :autoClose="false">
        <div class="product-list">
          <div class="product-item" v-for="(product,idx) in proData" :key="idx">
            <div class="info-box" @click="taggleProductCheck(idx)">
              <div class="check"   >
                <icon
                  class="check-icon"
                  :color="product.check?'#F53636':'#999'"
                  size="20"
                  :type="product.check?'iconblchecked':'iconCircle'"
                ></icon>
              </div>
              <image class="thumb" :src="product.ImgPath"></image>
              <div class="info">
                <div class="title">{{product.Products_Name}}</div>
                <div class="price-box">
                  <span class="sign">￥</span>
                  <span>{{product.Products_PriceY}}</span>
                  <span class="p-l-20 p-r-4 fz-12 color-gray">拼购价:</span>
                  <span class="sign">￥</span>
                  <span>{{product.Products_PriceX}}</span>
                </div>
                <div class="stock-box">
                  <span class="stock">库存:{{product.Products_Count}}</span>
                  <span class="sale p-l-40">销量:{{product.Products_Sales}}</span>
                </div>
              </div>
            </div>
          </div>
        </div>
        <button class="btn btn-primary m-t-35" @click="surePro">确认</button>
      </popup-layer>

      <popup-layer title="适用范围" ref="useFan" :autoClose="true">
      <radio-group class="type-list p-l-10 p-r-10"  @change="setFeeType">
        <label class="type-item flex flex-vertical-center">
          <radio color="#00A8FF" value="0" :checked="useCan === 0"></radio>
          <div class="label p-10 flex flex-vertical-center">
            <div class="title m-r-15">全部商品</div>
          </div>
        </label>
        <label class="type-item flex flex-vertical-center">
          <radio color="#00A8FF" value="1" :checked="useCan === 1"></radio>
          <div class="label p-10 flex flex-vertical-center">
            <div class="title m-r-15">指定商品</div>
            <div class="select-pro" @click="selectPro">
              选择商品
            </div>
          </div>
        </label>
      </radio-group>
      <button class="btn btn-primary m-t-35" @click="closePop('useFan')">确认</button>
    </popup-layer>


      <modal ref="myModal">
        <div >
          <div class="wzw-title">
            指定赠送
          </div>
          <div class="flex flex-vertical-center flex-justify-between wzw-content">
            <div>
              开启
            </div>
            <div>
              <switch :checked="front_show==2" bindchange="switch1Change" style="transform: scale(.8)"></switch>
            </div>
          </div>
          <div class="wzw-info">
            若选择赠送则只能赠送用户优惠券的时候才会显示，前端将不显示
          </div>
        </div>
      </modal>
    </div>
</template>

<script>
  import wepy from '@wepy/core'
  import store from '../../store'
  import pageMixin from '../../mixins'
  import { getCouponList, getUserLevel, opCoupon } from '../../api/store'
  import { bizProdList } from '../../api/product'
  import {
    chooseImageByPromise,
    findArrayIdx,
    getArrColumn,
    getDomain,
    objTranslate,
    uploadImages
  } from '../../common/helper'
  import { error, hideLoading, modal, showLoading } from '../../common/fun'
  import { dateTimePicker, getMonthDay, getNewDateArry } from '../../common/time'
  import { Exception } from '../../common/Exception'

  const moment = require('moment')
  const fromNum = (num) => {
    const _num = parseInt(num)
    return _num >= 10 ? _num : `0${_num}`
  }

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      proData: [],
      useCan: 0,
      dateTimeArray1: [],
      dateTime1: [0, 0, 0, 0],
      startTime: [],
      dateTimeArray2: [],
      dateTime2: [0, 0, 0, 0],
      endTime: [],
      Coupon_Cash: '',
      Coupon_Condition: '',
      editData: {},
      Coupon_ID: '',
      Coupon_Subject: '',
      vipData: [],
      imgTempList: [],
      imgs: [],
      ind: 0,
      canUse: [{id: '-1', name: '不限'}, {id: '1', name: '1'}, {id: '2', name: '2'}, {id: '3', name: '3'}, {id: '4', name: '4'}, {id: '5', name: '5'}, {id: '6', name: '6'}, {id: '7', name: '7'}, {id: '8', name: '8'}, {id: '9', name: '9'}, {id: '10', name: '10'}],
      index: 0,
      front_show: 1,
      Coupon_UserLevel: '',
      coupon_prod: ''
    },
    onLoad(options) {
      if (options.Coupon_ID) {
        this.Coupon_ID = options.Coupon_ID
      } else {
        let obj1 = dateTimePicker('', '')
        this.dateTimeArray1 = obj1.dateTimeArray
        this.dateTime1 = obj1.dateTime
        this.dateTimeArray2 = obj1.dateTimeArray
        this.dateTime2 = obj1.dateTime
      }

      this.init()
    },
    methods: {
      surePro() {
        this.closePop('pro')
        this.coupon_prod = ''
        for (let item of this.proData) {
          if (item.check) {
            this.coupon_prod += item.Products_ID + ','
          }
        }
        this.coupon_prod = this.coupon_prod.substring(0, this.coupon_prod.length - 1)
      },
      taggleProductCheck(idx) {
        this.proData[idx].check = !this.proData[idx].check
      },
      selectPro() {
        this.closePop('useFan')
        this.openPop('pro')
      },
      setFeeType(e) {
        const feeType = parseInt(e.$wx.detail.value)
        this.useCan = feeType
        if (feeType === 1) {
          this.closePop('useFan')
          this.openPop('pro')
        }
      },
      openPop(name) {
        this.$refs[name].show()
      },
      closePop(name) {
        this.$refs[name].close()
      },
      changeDateTime2(e) {
        console.log(e.$wx.detail.value)
        this.endTime = e.$wx.detail.value
        this.dateTime2 = e.$wx.detail.value
      },
      changeDateTimeColumn2(e) {
        console.log(e)
        const {column, value} = e.$wx.detail
        this.$set(this.dateTime2, column, value)
        let dateArr = this.dateTimeArray2
        if ([1, 2].includes(column)) {
          const newDayList = getMonthDay(dateArr[0][this.dateTime2[0]], dateArr[1][this.dateTime2[1]])
          console.log(newDayList)
          if (!newDayList.hasOwnProperty(this.dateTime2[3])) this.$set(this.dateTime2, 3, 0)
          this.$set(this.dateTimeArray2, 2, newDayList)
        }
      },
      changeDateTime1(e) {
        console.log(e.$wx.detail.value)
        this.startTime = e.$wx.detail.value
        this.dateTime1 = e.$wx.detail.value
      },
      changeDateTimeColumn1(e) {
        let arr = this.dateTime1
        let dateArr = this.dateTimeArray1
        arr[e.$wx.detail.column] = e.$wx.detail.value
        dateArr[2] = getMonthDay(dateArr[0][arr[0]], dateArr[1][arr[1]])
        this.dateTimeArray1 = dateArr
        this.dateTime1 = arr
      },
      saveCoupon() {
        showLoading()
        const startTimeDate = parseInt(this.dateTimeArray1[0][this.dateTime1[0]]) + '-' + fromNum(this.dateTimeArray1[1][this.dateTime1[1]]) + '-' + fromNum(this.dateTimeArray1[2][this.dateTime1[2]]) + ' ' + fromNum(this.dateTimeArray1[3][this.dateTime1[3]]) + ':' + fromNum(this.dateTimeArray1[4][this.dateTime1[4]]) + ':' + fromNum(this.dateTimeArray1[5][this.dateTime1[5]])
        const endTimeDate = parseInt(this.dateTimeArray2[0][this.dateTime2[0]]) + '-' + fromNum(this.dateTimeArray2[1][this.dateTime2[1]]) + '-' + fromNum(this.dateTimeArray2[2][this.dateTime2[2]]) + ' ' + fromNum(this.dateTimeArray2[3][this.dateTime2[3]]) + ':' + fromNum(this.dateTimeArray2[4][this.dateTime2[4]]) + ':' + fromNum(this.dateTimeArray2[5][this.dateTime2[5]])

        const startTime = moment(startTimeDate).format('YYYY-MM-DD HH:mm:ss')
        const endTime = moment(endTimeDate).format('YYYY-MM-DD HH:mm:ss')

        let boo = moment(endTime).isAfter(startTime)
        if (!boo) {
          hideLoading()
          error('结束时间必须大于开始时间')
          return
        }

        if (!this.canUse.hasOwnProperty(this.index)) {
          error('请选择使用条件')
        }

        let data = {
          Coupon_Subject: this.Coupon_Subject,
          Coupon_PhotoPath: this.imgTempList[0],
          Coupon_Cash: this.Coupon_Cash,
          Coupon_Condition: this.Coupon_Condition,
          Coupon_UsedTimes: this.canUse[this.index].id,
          Coupon_UserLevel: this.vipData[this.ind].id,
          front_show: this.front_show,
          Coupon_StartTime: startTime,
          Coupon_EndTime: endTime
        }
        if (this.useCan === 1) {
          if (!this.coupon_prod) {
            error('你还没有选择指定商品')
          }
          data.coupon_prod = this.coupon_prod
        } else {
          data.coupon_prod = '0'
        }
        if (this.Coupon_ID) {
          data.coupon_id = this.Coupon_ID
        }
        opCoupon(data).then(res => {
          if (this.Coupon_ID) {
            wx.showToast({
              title: '修改成功',
              icon: 'success'
            })
            setTimeout(() => {
              wx.navigateBack({
                delta: 1
              })
            })
          } else {
            wx.showToast({
              title: '新增成功',
              icon: 'success'
            })
            setTimeout(() => {
              wx.navigateBack({
                delta: 1
              })
            })
          }
          hideLoading()
        }).catch(e => { hideLoading() })
      },
      bindDateChange(e) {
        let boo = e.$wx.detail.value
      },
      switch1Change(e) {
        let boo = e.$wx.detail.value

        if (boo) {
          this.front_show = 2
        } else {
          this.front_show = 1
        }
      },
      selectUse() {
        this.$refs.myModal.show()
      },
      bindThumbClick(idx, img) {
        wx.showActionSheet({
          itemList: ['预览图片', '移除图片'],
          success: (res) => {
            const {tapIndex} = res

            if (tapIndex === 0) {
              wx.previewImage({
                urls: [img.path]
              })
            }
            if (tapIndex === 1) {
              this.imgTempList = []
              this.imgs = []
            }
          },
          fail (res) {

          }
        })
      },
      async addImg() {
        try {
          if (this._click) throw Error('操作过快')
          const files = await chooseImageByPromise({count: this.thumbLimit - this.imgs.length}).catch((err) => { throw Error(err.errMsg) })
          const arr1 = files.map(file => {
            return {...file, task: {progress: 0, totalBytesSent: 0, totalBytesExpectedToSend: 0}}
          })
          console.log('upload img arr1 is', arr1)
          // this.imgTempList = this.imgTempList.concat(arr1)
          const imgs = getArrColumn(files, 'path')
          const ossUrls = await uploadImages({imgs, progressList: this.imgTempList}).catch((errMsg) => { throw {message: errMsg, type: 'modal'} })
          for (var i = 0; i < ossUrls.length; i++) {
            ossUrls[i] = getDomain(ossUrls[i])
          }
          this.imgTempList = ossUrls
          this._click = false
        } catch (e) {
          if (e.message !== 'chooseImage:fail cancel')Exception.handle(e)
          wx.$errorHandle(e)
        }
      },
      bindPickerChanges(e) {
        this.index = e.$wx.detail.value
      },
      bindPickerChange(e) {
        this.ind = e.$wx.detail.value
        console.log(e.$wx.detail.value)
      },
      async init() {
        let that = this
        if (this.Coupon_ID) {
          getCouponList().then(res => {
            let arr = res.data
            for (let item of arr) {
              if (item.Coupon_ID == this.Coupon_ID) {
                that.editData = item
                this.useCan = item.coupon_prod == 0 ? 0 : 1
                if (this.useCan === 1) {
                  this.coupon_prod = item.coupon_prod
                }
                this.Coupon_Subject = item.Coupon_Subject
                // this.imgs[0] = item.Coupon_PhotoPath
                this.Coupon_Cash = item.Coupon_Cash
                this.Coupon_Condition = item.Coupon_Condition
                const idx = findArrayIdx(this.canUse, {id: item.Coupon_UsedTimes})
                if (idx >= 0) this.index = idx
                // this.index = String(item.Coupon_UsedTimes)
                this.Coupon_UserLevel = String(item.Coupon_UserLevel)
                this.front_show = item.front_show

                this.imgTempList.push(item.Coupon_PhotoPath)
                console.log(item.Coupon_PhotoPath, this.imgTempList, 'sss')

                let obj1 = dateTimePicker('', '', item.Coupon_StartTime) // 传入已有时间，防止出现31号的情况
                let obj2 = dateTimePicker('', '', item.Coupon_EndTime)// 传入已有时间，防止出现31号的情况

                this.dateTimeArray1 = obj1.dateTimeArray
                this.dateTime1 = obj1.dateTime

                this.dateTimeArray2 = obj2.dateTimeArray
                this.dateTime2 = obj2.dateTime

                // 初始化开始时间
                let date = item.Coupon_StartTime
                let defaultDate = date ? [...date.split(' ')[0].split('-'), ...date.split(' ')[1].split(':')] : getNewDateArry()
                let arr = []
                for (let j = 0; j < this.dateTimeArray1.length; j++) {
                  for (let i = 0; i < this.dateTimeArray1[j].length; i++) {
                    if (parseInt(this.dateTimeArray1[j][i]) == parseInt(defaultDate[j])) {
                      arr.push(i)
                    }
                  }
                }
                // 初始化结束时间
                let dates = item.Coupon_EndTime

                // // 更新日期列表，不然有可能出现31天的情况
                // console.log(objTranslate(this.dateTimeArray2[2]))
                // const tempTime = getNewDateArry(item.Coupon_EndTime)
                // const dateTimeArray2 = getMonthDay(tempTime[0], tempTime[1])
                // this.$set(this.dateTimeArray2, 2, dateTimeArray2)

                console.log(objTranslate(this.dateTimeArray2[2]))
                let defaultDates = dates ? [...dates.split(' ')[0].split('-'), ...dates.split(' ')[1].split(':')] : getNewDateArry()
                let arrs = []
                for (let j = 0; j < this.dateTimeArray2.length; j++) {
                  for (let i = 0; i < this.dateTimeArray2[j].length; i++) {
                    if (parseInt(this.dateTimeArray2[j][i]) == parseInt(defaultDates[j])) {
                      console.log(j, i)
                      arrs.push(i)
                    }
                  }
                }

                this.startTime = arr
                this.dateTime1 = arr
                this.endTime = arrs
                this.dateTime2 = arrs
                console.log(arr, arrs, 'sss')
              }
            }
          })
        }
        await getUserLevel().then(res => {
          this.vipData = res.data
          this.vipData.unshift({id: '-1', level_name: '不限'})
          for (let i = 0; i < this.vipData.length; i++) {
            if (this.vipData[i].id == this.Coupon_UserLevel) {
              this.ind = String(i)
            }
          }
        })

        await bizProdList({page: 1, pageSize: 999}).then(res => {
          this.proData = res.data.map(item => {
            return {...item, check: false}
          })

          let arr = this.coupon_prod.split(',')

          this.proData.map(item => {
            for (let it of arr) {
              if (item.Products_ID == it) {
                item.check = true
              }
            }
          })
        })
      },
      onShow() {

      }
    }
  })

</script>
<style lang="scss">
  @import "../../assets/variables.scss";
  @import "../../assets/mixins.scss";
  .page-wrap{
    padding-bottom: 44px; //.btn的是44px
  }
  .all{width: 750rpx;overflow: hidden}
  .full-img{width: 100%;height: 100%}
  .flex1{flex: 1}
  .line{width: 750rpx;height: 20rpx}
  .title{
    font-size: 30rpx;color: #333333;
  }
  .counpon-name{
    width: 710rpx;
    height: 114rpx;
    line-height: 88rpx;
    display: flex;
    align-items: center;
    font-size: 30rpx;
    padding: 26rpx 20rpx 0rpx 20rpx;
    color: #333333;
    background-color: #FFFFFF;
  }
  .place{
    font-size: 26rpx;
    color: #CAC8C8;
  }
  .input-input{
    width: 100%;
    padding-left: 46rpx;
  }
  .coupon-img{
    width: 710rpx;
    padding: 20rpx;
    height: 120rpx;
    background-color: #FFFFFF;
  }
  .coupon-method{
    height: 116rpx;
    width: 710rpx;
    padding: 0rpx 20rpx;
    background-color: #FFFFFF;
  }
  .picker-mbx{
    flex: 1;
    text-align: right;
    height: 108rpx;
    line-height: 108rpx;
    color: #999999;
    font-size: 26rpx;
  }
  .money{
    margin-left: 56rpx;
    font-size: 26rpx;
    margin-right: 12rpx;
    color: #888888;
  }
  .money-last{
    font-size: 22rpx;
    margin-left: 16rpx;
    color: #B1B1B1;
  }
  .inputs{
    width:190rpx;
    height:58rpx;
    line-height: 58rpx;
    text-align: center;
    border:1px solid rgba(221,221,221,1);
  }
  .store-item{
    height: 88rpx;
    width: 710rpx;
    padding: 0rpx 20rpx;
    background-color: #FFFFFF;
  }
  .store-titles{
    display: flex;
    align-items: center;
    color: #999999;
    font-size: 26rpx;
  }


  .add{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border: 1px dashed #ccc;
    box-sizing: border-box;
    margin-right: 0;
    margin-bottom: 0;
  }
  .img-item{
    width: 120rpx;
    height: 120rpx;
    margin-left: 48rpx;
    position: relative;
  }
  .wzw-title{
    width: 750rpx;
    text-align: center;
    height: 30rpx;
    line-height: 30rpx;
    font-size: 32rpx;
    color: #333333;
    padding-top: 30rpx;
    padding-bottom: 90rpx;
  }
  .wzw-content{
    width: 690rpx;
    margin: 0 auto;
    height: 44rpx;
    line-height: 44rpx;
    margin-bottom: 26rpx;
  }
  .wzw-info{
    font-size: 22rpx;
    color: #999999;
    width: 690rpx;
    margin: 0 auto;
    height: 20rpx;
    line-height: 20rpx;
    margin-bottom: 86rpx;
  }
  .list-item{
    width: 710rpx;
    margin: 0 auto;
    height: 118rpx;
    border-bottom: 1px solid #E6E6E6;
    box-sizing: border-box;
  }
  .list-item-q{
    width: 150rpx;
    height: 118rpx;
    line-height: 118rpx;
    font-size: 28rpx;
    color: #333333;
  }
  .font-wzw{
    font-size: 26rpx;
    color: #777777;
  }

  .select-pro{
    font-size: 24rpx;
    color: #00A8FF;
  }

  /*商品列表 start*/
  .product-list{
      height: 800rpx;
    overflow: scroll;
  }
  .product-item{
    padding: 30rpx 0;
    background: white;
    margin-bottom: 20rpx;
    .info-box{
      padding: 0 20rpx;
      display: flex;
      font-size: 14px;
      height: 176rpx;
      .check{
        padding-right: 20rpx;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        .check-icon{

        }
      }
      .thumb{
        width: 176rpx;
        height: 176rpx;
      }
      .info{
        flex: 1;
        padding-left: 20rpx;
        .title{
          color: #333;
          font-size: 14px;
          /*font-weight: bold;*/
          line-height: 20px;
          height: 40px;
          overflow: hidden;
          text-overflow: ellipsis;
          margin-bottom: 8px;
        }
        .price-box{
          color: $fun-red-color;
          margin-bottom: 10px;
          font-size: 14px;
        }
        .stock-box{
          font-size: 12px;
          color: #888;
        }
      }
    }
    .actions{
      margin-top: 30rpx;
      font-size: 12px;
      display: flex;
      .action{
        justify-content: center;
        padding: 0;
        flex: 1;
        display: flex;
        align-items: center;
        color: #888;
        border-right: 1rpx solid #e7e7e7;
        &:last-child{
          border-right: none;
        }
        .title{
          padding-left: 8px;
        }
      }
    }
  }
  /*商品列表 end*/
</style>
<config>
  {
  "navigationBarTitleText": "添加优惠券",
  "navigationBarTextStyle": "black",
  "usingComponents": {
  "wzw-im-tip": "~@/components/wzw-im-tip",
  "icon": "~@/components/icon",
  "modal": "~@/components/ModelComponents",
  "popup-layer": "~@/components/popup-layer",
  }
  }
</config>
