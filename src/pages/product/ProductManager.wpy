<template>
  <div class="page-wrap" :style="{paddingBottom:showHandle?'92rpx':'0'}">
    <div class="head-actions">
      <div class="item" @click="$linkTo('/pages/product/form')">
        <image class="icon" src="/static/goods/add.png"></image>
        <div class="title">添加商品</div>
      </div>
      <div class="item" @click="$linkTo('/pages/product/DiyCate')">
        <image class="icon" src="/static/goods/cate.png"></image>
        <div class="title">分类管理</div>
      </div>
      <div class="item" @click="taggleHandleShow">
        <image class="icon" src="/static/goods/multi.png"></image>
        <div class="title">批量管理</div>
      </div>
    </div>

    <div class="product-list">
        <div class="product-item" v-for="(product,idx) in productList" :key="idx">
            <div class="info-box" @click="taggleProductCheck(idx)">
              <div class="check" v-if="showHandle"  >
                <icon
                  class="check-icon"
                  :color="product.check?'#F53636':'#999'"
                  size="20"
                  :type="product.check?'iconblchecked':'iconCircle'"
                ></icon>
              </div>
              <image class="thumb" :src="product.ImgPath"></image>

              <div class="info">
                <div>
                  <div class="title">{{product.Products_Name}}</div>
                  <div class="price-box">
                    <span class="sign">￥</span>
                    <span>{{product.Products_PriceY}}</span>
                    <span class="p-l-20 p-r-4 fz-12 color-gray">拼购价:</span>
                    <span class="sign">￥</span>
                    <span>{{product.Products_PriceX}}</span>
                  </div>
                </div>
                <div>
                  <div class="stock-box">
                    <span class="stock">库存:{{product.Products_Count}}</span>
                    <span class="sale p-l-40">销量:{{product.Products_Sales}}</span>
                  </div>
                  <div class="check-status fz-12 color-red  m-t-6" v-if="product.Products_Status===-1" @click="showRejectReasn(product)">
                    <span>审核未通过</span><span class="m-l-6" style="text-decoration: underline;">查看原因</span>
                  </div>
                </div>
              </div>
            </div>
            <div class="actions">
              <div class="action" @click="$linkTo('/pages/product/form?id='+product.Products_ID)">
                <icon type="iconbianji1"></icon>
                <span class="title">编辑</span>
              </div>
              <div class="action" @click="delProd(product.Products_ID,idx)">
                <icon size="18" type="iconshanchu"></icon>
                <span class="title">删除</span>
              </div>
              <div class="action" @click="taggleProdStatus(product,idx)">
                <template v-if="!product.Products_SoldOut">
                  <icon type="iconxiajia"></icon>
                  <span class="title">下架</span>
                </template>
                <template v-else>
                  <icon type="iconputaway"></icon>
                  <span class="title">上架</span>
                </template>
              </div>
              <div class="action">
                <icon size="14" type="iconfenxiang1"></icon>
                <span class="title">分享</span>
              </div>
            </div>
          </div>
    </div>

    <div class="handle-box" v-show="showHandle">
      <div @click="taggleAllCheck">
        <icon
          size="20"
          :color="allCheck?'#F53636':'#999'"
          :type="allCheck?'iconblchecked':'iconCircle'"
        ></icon>
        <span class="p-l-8">切换全选</span>
      </div>
      <div class="btn-list">
        <div class="btn btn-up" @click="taggleAll('up')">上架</div>
        <div class="btn btn-down" @click="taggleAll('down')">下架</div>
      </div>
    </div>

<!--    <div class="p-t-50 p-b-50 bgwhite">-->
<!--      <copyright></copyright>-->
<!--    </div>-->
  </div>
</template>

<script>
  import wepy from '@wepy/core'
  import store from '../../store'
  import pageMixin from '../../mixins'

  import { bizProdDel, bizProdDown, bizProdList, bizProdUp } from '../../api/product'
  import { error } from '../../common/fun'
  import { confirm, getArrColumn } from '../../common/helper'
  import wxPromisify from '../../common/promisify'

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      paginate: {
        page: 1,
        pageSize: 6,
        totalCount: 0
      },
      showHandle: false,
      allCheck: false,
      productList: []
    },
    methods: {
      showRejectReasn(productInfo) {
        confirm({
          title: '审核详情',
          content: productInfo.reject_reason
        }).catch(() => {

        })
      },
      bindImgError: function (e) {
        console.log(e.$wx)

        const idx = e.$wx.currentTarget.dataset.index
        console.log(idx)
        this.productList[idx].ImgPath = '/static/placehold.jpg'
        // const {errorImg} = e.target.dataset
        // var errObj = {}
        // errObj[errorImg] = '/static/placehold.jpg'
        // this.setData(errObj)
      },
      async delProd(pro_id, idx) {
        try {
          // wx.showModal({
          //   title:'提示',
          //   content:'删除操作不可逆,是否确定删除该商品?',
          // })
          const {confirm} = await wxPromisify('showModal', {
            title: '提示',
            content: '删除操作不可逆,是否确定删除该商品?'
          })
          if (!confirm) return
          const prod_ids = [pro_id]
          await bizProdDel({ids: JSON.stringify(prod_ids),type:7}, {tip: 'loading'}).catch(() => { throw Error('删除商品失败') })
          this.productList.splice(idx, 1)
        } catch (e) {
          error(e.message())
        }
      },
      async taggleAll(act) {
        try {
          const action = act === 'up' ? bizProdUp : bizProdDown
          const prod_list = this.productList.filter(item => item.check)
          const prod_ids = getArrColumn(prod_list, 'Products_ID')
          if (prod_ids.length < 1) throw Error('请至少选择一个商品')

          await action({ids: JSON.stringify(prod_ids)}, {tip: '更新中'}).catch(() => { throw Error('更新商品状态失败') })
          // 更新状态
          for (let pro of this.productList) {
            if (prod_ids.includes(pro.Products_ID)) {
              pro.Products_SoldOut = act === 'up' ? 0 : 1 // 0正常，1下架
            }
          }
          // toast('操作成功')
        } catch (e) {
          error(e.message())
        }
      },
      taggleProdStatus(prod, idx) {
        console.log(prod)
        const action = prod.Products_SoldOut ? bizProdUp : bizProdDown
        console.log(prod.Products_SoldOut)
        const prod_ids = [prod.Products_ID]

        action({ids: JSON.stringify(prod_ids)}, {tip: 'loading'}).then(res => {
          this.$set(this.productList[idx], 'Products_SoldOut', !prod.Products_SoldOut)
        }).catch(() => {

        })
      },
      async _init_func() {
        this.productList = await bizProdList({pageSize: 9999}, {onlyData: true}).catch(() => {})
      },
      taggleAllCheck() {
        const check = !this.allCheck
        this.allCheck = check
        this.productList = this.productList.map(item => {
          return {...item, check}
        })
      },
      taggleProductCheck(idx) {
        if (!this.showHandle) return
        console.log(idx)
        this.productList[idx].check = !this.productList[idx].check
      },
      taggleHandleShow() {
        this.showHandle = !this.showHandle
      },
      checkboxChange: function (e) {
        console.log('checkbox发生change事件，携带value值为：', e.$wx.detail.value)
      }
    },
    // onReachBottom() {
    //   if (this.productList.length >= this.paginate.totalCount) return
    //   this.paginate.page++
    //   this._init_func()
    // },
    onShow() {
      this._init_func()
    },
    created() {

    }

  })

</script>
<style lang="scss">
  @import "../../assets/variables.scss";
  @import "../../assets/mixins.scss";

  /* 底部的操作栏start */
  .handle-box{
    position: fixed;
    bottom: 0;
    left: 0;
    height: 90rpx;
    width: 750rpx;
    background: white;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 14px;
    padding: 0 20rpx;
    box-sizing: border-box;
    border-top: 1px solid #eee;
    .btn-list{
      display: flex;
      align-items: center;
      .btn{
        display: block;
        width:96rpx;
        height: 54rpx;
        line-height: 54rpx;
        font-size: 14px;
        text-align: center;
        border-radius: 10rpx;
        border:1px solid $fun-red-color;
        color: $fun-red-color;
        background: white;
        margin-left: 20rpx;
        &.btn-up{
          color: white;
          background: $fun-red-color;
        }
      }
    }
  }
  /*底部操作栏 end*/

  .page-wrap{
    padding-top: 200rpx;
  }


  /** 顶部start **/
  .head-actions{
    position: fixed;
    top: 0;
    width: 750rpx;
    height: 200rpx;
    display: flex;
    align-items: center;
    box-sizing: border-box;
    z-index: 2;
    background: #f8f8f8;
    box-shadow: rgba(0,0,0,.06) 0 10px 10px 4px;
    .item{
      flex:1;
      text-align: center;
      .icon{
        width: 70rpx;
        height: 70rpx;
        border-radius: 50%;
      }
      .title{
        color: #333;
        font-size: 14px;
      }
    }
  }
  /** 顶部end **/

  /*商品列表 start*/
  .product-list{

  }
  .product-item{
    padding: 30rpx 0;
    background: white;
    margin-bottom: 20rpx;
    .info-box{
      padding: 20rpx;
      display: flex;
      font-size: 14px;
      height: 196rpx;
      .check{
        padding-right: 20rpx;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        .check-icon{

        }
      }
      .thumb{
        width: 196rpx;
        height: 196rpx;
      }
      .info{
        flex: 1;
        padding-left: 20rpx;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        .title{
          color: #333;
          font-size: 14px;
          /*font-weight: bold;*/
          line-height: 20px;
          max-height: 40px;
          overflow: hidden;
          text-overflow: ellipsis;
          margin-bottom: 6px;
        }
        .price-box{
          color: $fun-red-color;
          font-size: 14px;
        }
        .check-status{

        }
        .stock-box{
          font-size: 12px;
          color: #888;
        }
      }
    }
    .actions{
      margin-top: 30rpx;
      font-size: 12px;
      display: flex;
      .action{
        justify-content: center;
        padding: 0;
        flex: 1;
        display: flex;
        align-items: center;
        color: #888;
        border-right: 1rpx solid #e7e7e7;
        &:last-child{
          border-right: none;
        }
        .title{
          padding-left: 8px;
        }
      }
    }
  }
  /*商品列表 end*/



</style>
<config>
  {
    "navigationBarTitleText": "商品管理",
    "navigationBarTextStyle": "black",
    "navigationBarBackgroundColor": "#fff",
    "usingComponents": {
      "copyright": "~@/components/copyright",
      "icon": "~@/components/icon",
      "fun-img": "~@/components/fun-img",
      "ad": "~@/components/ad"
    }
  }
</config>
