<style lang="scss">
  @import "../../assets/mixins.scss";
  @import "../../assets/variables.scss";
  .container{
    padding-bottom: 100rpx;
  }
  .cate-item{
    margin-bottom: 10px;
    background: white;
    padding-left: 15px;
    box-sizing: border-box;
    .cate-item-row{
      padding: 15px 0;
      display: flex;
      align-items: center;
      border-bottom: 1px solid #eee;

      &.first{
        .content{
          color: #000;
        }
      }

      .content{
        flex: 1;
        padding-right: 10px;
        color: #888;
      }
      .actions{
        display: flex;
        align-items: center;
        padding-right: 10px;
        .icon{
          margin-right: 10px;
          &:last-child{
            margin-right: 0;
          }
        }

      }
    }
  }
  .form-wrap{
    width: 550rpx;
    padding: 20px;
    box-sizing: border-box;
    background: white;
    .title{
      text-align: center;
    }
    .form{
      font-size: 14px;
      padding: 20px 0;
      .form-cell{
        .input{
          border: 1px solid #eee;
          padding: 6px;
        }
      }
    }
    .actions{
      display: flex;
      justify-content: center;
      align-items: center;
      .btn-item{

      }
      .cancel{
        margin-right: 15px;
      }
      .confirm{
        background: $fun-blue-color;
        color: #fff;

      }
    }
  }
</style>
<template>
  <div class="page-wrap">
    <div class="container">
      <div class="cate-item" v-for="(item,idx) in list" :key="idx">
        <div class="cate-item-row first">
          <div class="content">{{item.cate_name}}</div>
          <div class="actions">
            <icon @click="openEdit(item)" size="20" color="#999" class="icon" type="iconbianji1"></icon>
            <icon @click="delCate(item.id)" size="20" color="#999" class="icon" type="iconshanchu"></icon>
          </div>
        </div>
        <template v-if="item.child && item.child.length>0">
          <div class="cate-item-row" v-for="(child,idx) in item.child" :key="idx2" >
            <div class="content">{{child.cate_name}}</div>
            <div class="actions">
              <icon @click="openEdit(child)" size="20" color="#999" class="icon" type="iconbianji1"></icon>
              <icon @click="delCate(child.id)" size="20" color="#999" class="icon" type="iconshanchu"></icon>
            </div>
          </div>
        </template>
        <div class="cate-item-row" style="border-bottom: none" @click="openAdd(item.id)">
          <div class="actions"><icon type="iconupload" weight="bold" color="#00A8FF"></icon><span class="p-l-10 fz-14 color-blue">添加子分类</span></div>
        </div>
      </div>

      <modal ref="add" positions="center">
        <div class="form-wrap">
          <div class="title">新增分类</div>
          <div class="form">
            <div class="form-cell">
              <input class="input" v-model="tempCateName" placeholder="请输入分类名称" />
            </div>
          </div>
          <div class="actions">
            <button @click="cancelAdd" class="cancel btn-item" size="mini">取消</button>
            <button @click="confirmAdd" class="confirm  btn-item" size="mini">确认</button>
          </div>
        </div>
      </modal>

      <modal ref="edit" positions="center">
        <div class="form-wrap">
          <div class="title">编辑</div>
          <div class="form">
            <div class="form-cell">
              <input class="input" v-model="_edit.cate_name" placeholder="请输入分类名称" />
            </div>
          </div>
          <div class="actions">
            <button @click="cancelEdit" class="cancel btn-item" size="mini">取消</button>
            <button @click="confirmEdit" class="confirm  btn-item" size="mini">确认</button>
          </div>
        </div>
      </modal>

      <div class="safearea-box"></div>
      <div class="btn action-btn btn-primary" @click="openAdd(0)">
        <icon color="#fff" type="iconadd"></icon>
        <span class="p-l-4">新建分类</span>
      </div>
    </div>

    <div class="safearea-box fixed bgwhite"> </div>
  </div>
</template>
<script>
  import wepy from '@wepy/core'
  import store from '../../store'
  import pageMixin from '../../mixins'

  import { addBizProdCate, delBizProdCate, editBizProdCate, getBizProdCateList } from '../../api/store'
  import { confirm } from '../../common/helper'

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      tempCateName: '',
      pid: 0,
      _edit: {cate_name: '', id: null},
      list: []
    },
    computed: {

    },
    methods: {

      // 自己handle错误
      async delCate(id) {
        try {
          await confirm({content: '删除后无法恢复，是否确认删除?'}).catch(() => { throw Error('notip') })
          await delBizProdCate({cate_id: id}, {errtip: false}).catch(({msg}) => { throw Error(msg) })
          this.cancelEdit()
          this._init_func()
        } catch (e) {

        }
      },
      async confirmEdit() {
        try {
          await editBizProdCate({cate_name: this._edit.cate_name, cate_id: this._edit.id, pid: this._edit.pid}).catch((msg) => { throw Error(msg) })
          this.cancelEdit()
          this._init_func()
        } catch (e) {

        }
      },
      cancelEdit() {
        this.edit = {cate_name: '', id: null}
        this.$closePop('edit')
      },
      openEdit(cate) {
        this._edit = cate
        this.$openPop('edit')
      },
      cancelAdd() {
        this.tempCateName = ''
        this.pid = 0
        this.$closePop('add')
      },
      openAdd(pid) {
        this.pid = pid
        this.$openPop('add')
      },
      async confirmAdd() {
        try {
          await addBizProdCate({cate_name: this.tempCateName, pid: this.pid}).catch(({msg}) => { throw Error(msg) })
          this.cancelAdd()
          this._init_func()
        } catch (e) {

        }
      },
      subFn() {

      },
      async _init_func() {
        this.list = await getBizProdCateList({}, {onlyData: true}).catch(() => { throw Error('获取分类失败') })
      }
    },
    onShow() {
      this._init_func()
    }
  })
</script>
<config>
  {
    "navigationBarTitleText": "自定义分类",
    "navigationBarTextStyle": "black",
    "usingComponents": {
      "err-msg": "~@/components/err-msg",
      "icon": "~@/components/icon",
      "modal": "~@/components/ModelComponents"
    }
  }
</config>
