<style lang="scss">
  .page-wrap {
    min-height: 100vh;
    background: #fff;
  }

  .recomment-item {
    margin: 0 30rpx 30rpx;
    border-bottom: 1px solid #E6E6E6;
    padding: 20px 0;
    background: #fff;
    &:last-child{
      border-bottom: none;
      margin-bottom: 0rpx;
      padding-bottom: 30rpx;
    }


    .title {
      font-size: 13px;
      line-height: 24px;
    }

  }
</style>
<template>
  <div class="page-wrap">
    <div class="recomment-item fz-14" v-for="(row,idx) in messageList" :key="idx" @click="toDetail(row.id)">
      <div class="title c3">{{row.title}} <span class="text-underline color-red m-l-4">查看详情</span></div>
      <div class="c9 fz-13 m-t-15">{{row.created_at}}</div>
    </div>

  </div>
</template>
<script>
  import wepy from '@wepy/core'
  import store from '@/store'
  import pageMixin from '@/mixins'
  import { bizMessageList } from '@/api/system'
  import { Exception } from '@/common/Exception'
  import moment from 'moment'
  import { toast } from '@/common/fun'

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      messageList: [],
      page: 1,
      pageSize: 10,
      totalCount: 0
    },
    computed: {},
    methods: {
      toDetail(id) {
        this.$linkTo('/pages/message/detail?id=' + id)
      },
      async _init_func(options) {
        const { totalCount, data: list } = await bizMessageList({
          pageSize: this.pageSize,
          page: this.page,
          biz_id: ''
        }).catch(err => {
          Exception.handle(Error(err.msg))
        })
        this.page++
        this.totalCount = totalCount

        this.messageList = list.map(row => {
          const { created_at, ..._row } = row
          return { ..._row, created_at: moment.unix(created_at).format('YYYY-MM-DD hh:mm:ss') }
        })
      }
    },
    onReady() {

    },
    async onReachBottom() {
      if (this.messageList.length >= this.totalCount) {
        toast('到底了', 'none')
        return
      }
      const { totalCount, data: list } = await bizMessageList({
        pageSize: this.pageSize,
        page: this.page
      }).catch(err => {
        Exception.handle(Error(err.msg))
      })
      this.page++
      this.totalCount = totalCount

      this.messageList = list.map(row => {
        const { created_at, ..._row } = row
        return { ..._row, created_at: moment.unix(created_at).format('YYYY-MM-DD hh:mm:ss') }
      })
    },
    onLoad() {
      this._init_func()
    },
    created() {

    }
  })
</script>
<config>
  {
  "navigationBarTitleText": "公告列表",
  "navigationBarTextStyle": "black",
  "usingComponents": {
  "icon": "~@/components/icon"
  }
  }
</config>
