<template>
  <div>
    <wzw-im-tip ref="wzwImTip"></wzw-im-tip>
    <div class="order-tab flex flex-vertical-center fz14 c3 p-t-10">
      <div class="order-item" :class="{'active':status==-1}" @click="changeTab(-1)">
        全部
        <!--            <span  class="order-tag" v-if="orderNumber.sumNumber>0">{{orderNumber.sumNumber>99?'n':orderNumber.sumNumber}}</span>-->
      </div>
      <div class="order-item" :class="{'active':status==1}" @click="changeTab(1)">
        待付款
        <span class="order-tag" v-if="orderNumber.waitpay>0">{{orderNumber.waitpay>99?'n':orderNumber.waitpay}}</span>
      </div>
      <div class="order-item" :class="{'active':status==2}" @click="changeTab(2)">
        待发货
        <span class="order-tag"
              v-if="orderNumber.waitsend>0">{{orderNumber.waitsend>99?'n':orderNumber.waitsend}}</span>
      </div>
      <div class="order-item" :class="{'active':status==3}" @click="changeTab(3)">
        待收货
        <span class="order-tag" v-if="orderNumber.waitconfirm>0">{{orderNumber.waitconfirm>99?'n':orderNumber.waitconfirm}}</span>
      </div>
      <div class="order-item" :class="{'active':status==4}" @click="changeTab(4)">
        已完成
      </div>
    </div>
    <div class="m-t-15 m-l-10 m-r-10 order-search flex flex-vertical-center">
      <input type="text" bindconfirm="searchList" v-model="prod_name" placeholder="请输入商品关键字" confirm-type="search"
             class="input-search" placeholder-class="_place"/>
      <icon type="iconsearch1" size="16" color="#999" class="icon-search"></icon>
      <!--        <div class="erweima m-l-15" @click="$linkTo('/pages/order/CheckChannel')">-->
      <!--          <icon  type="iconsaoma" size="20"  color="#00A8FF" ></icon>-->
      <!--          <div>核销</div>-->
      <!--        </div>-->
    </div>

    <div class="list-item p-b-13" v-for="(item,index) of list" :key="index">
      <div class="item-top flex flex-vertical-center flex-justify-between fz-12">
        <div class="c7">
          订单号：{{item.Order_ID}}
          <block v-if="item.Order_Type ==='pintuan' && item.teamstatus_desc">
            <span class="m-l-10 c9">拼团状态:</span>
            <span class="color-red m-l-4">{{item.teamstatus_desc}}</span>
          </block>

        </div>
        <div>
          {{item.Order_Status_desc}}
        </div>
      </div>
      <div class="item-center p-t-10  p-l-7 p-r-12 flex " v-for="(pro,ind) of item.prod_list" :key="ind"
           @click="sendOrder(item.Order_ID)">
        <image class="thumb m-r-14" :src="pro.prod_img"></image>
        <div class="flex1">
          <div class="fz-14 c3 item-title m-b-10">
            {{pro.prod_name}}
          </div>
          <div class="flex flex-justify-between flex-vertical-center fz-11 c3 m-b-11">
            <div class="item-sku" v-if="pro.attr_info.attr_name">
              {{pro.attr_info.attr_name}}
            </div>
            <div style="height: 50rpx;" v-else>
            </div>
            <div>
              ×{{pro.prod_count}}
            </div>
          </div>
          <div class="item-price">
            ¥ <span class="fz-15">{{pro.prod_price}}</span>
          </div>
        </div>
      </div>
      <div v-if="item.city_express_appoint_time>0" class="p-10 fz-14 c5 flex flex-justify-between flex-vertical-center">
        <span class="c9">预约配送</span>
        <span class="c7">需{{item.city_express_appoint_time_desc}}</span>
      </div>
      <div class="item-bottom p-l-15 p-r-15 m-t-15 fz-14 flex flex-vertical-center flex-justify-between"
           v-if="item.isLocal && (item.Order_Status==3 || item.dadaFail)">
        <div v-if="item.Order_Status==3" class="item-btn c6 danger-btn m-r-10" @click="cancelLocalSend(item.Order_ID)">
          取消配送
        </div>
        <div v-if="item.dadaFail" class="item-btn c6 danger-btn" @click="bindLocalSendFail(item)">
          投递异常
        </div>
      </div>
      <div class="item-bottom p-l-15 p-r-15 m-t-15 fz-14 flex flex-vertical-center flex-justify-between"
           v-if="item.Order_Status==2">
        <div class="item-btn c6" @click="rejectOrder(item.Order_ID)">
          拒单
        </div>
        <block v-if="item.Order_Type ==='pintuan'">
          <!--0拼团中，1拼团成功，4拼团失败-->
          <div v-if="!item.Order_IsVirtual && item.teamstatus ==1" class="item-btn item-btn-active m-l-10"
               @click="sendOrder(item.Order_ID)">
            去发货
          </div>
        </block>
        <block v-else>
          <div v-if="!item.Order_IsVirtual" class="item-btn item-btn-active m-l-10" @click="sendOrder(item.Order_ID)">
            去发货
          </div>
        </block>

        <div v-if="item.Order_IsVirtual" class="item-btn item-btn-active m-l-10"
             @click="$linkTo('/pages/order/CheckChannel')">
          核销
        </div>

      </div>
    </div>

    <div class="h30"></div>

    <div class="zhezhao" catchtouchmove="true" v-if="show">
      <div class="input-wrap">
        <div>请输入拒单原因</div>
        <textarea auto-height class="input" placeholder="请输入原因" v-model="reason" style="width: 100%;"></textarea>
        <div class="btns">
          <div @click="cancelInput" class="btn">取消</div>
          <div @click="confirmInput" class="btn">确定</div>
        </div>
      </div>
    </div>

    <popup-layer ref="localSendCancelPopup">
      <div class="local-cancel-wrap">
        <div class="title">
          <div class="text">选择取消原因</div>
          <div @click="subReasonFn" class="sub-btn">确认</div>
        </div>
        <picker-view indicator-style="height: 30px;" style="width: 100%; height: 150px;"
                     @change="bindCancelReasonChange">
          <picker-view-column>
            <view style="line-height: 30px; text-align: center;" class="fz-14"
                  v-for="(item,index) in cancel_reason_list" :key="item.id">{{item.reason}}
            </view>
          </picker-view-column>
        </picker-view>
      </div>
    </popup-layer>

  </div>
</template>

<script>
  import wepy from '@wepy/core'
  import store from '../../store'
  import pageMixin from '../../mixins'
  import {
    cityExpressCancelReason,
    cityExpressOrderReject,
    dadaExceptionOrderReceive,
    getOrder,
    getOrderNum,
    systemRejectOrder
  } from '../../api/order'
  import { error, hideLoading, showLoading, toast } from '../../common/fun'
  import { confirm } from '../../common/helper'
  import { Exception } from '../../common/Exception'

  wepy.page({
    store,
    mixins: [pageMixin],
    data: {
      orderNumber: {}, // 角标对象
      cancel_reason_list: [],
      current_handle_order: '',
      show: false,
      reasonId: '',
      prod_name: '',
      page: 1,
      pageSize: 4,
      totalCount: 0,
      status: -1,
      list: [],
      reason: '',
      orderId: '', // 拒单id
      Order_Type: 'shop'
    },
    onLoad(options) {
      if (options.Order_Type) {
        this.Order_Type = options.Order_Type
      }
      if (this.Order_Type === 'shop') {
        wx.setNavigationBarTitle({
          title: '普通订单'
        })
      }
      if (this.Order_Type === 'pintuan') {
        wx.setNavigationBarTitle({
          title: '拼团订单'
        })
      }
      if (this.Order_Type === 'offline') {
        wx.setNavigationBarTitle({
          title: '线下订单'
        })
      }
      if (this.Order_Type === 'offline') {
        wx.setNavigationBarTitle({
          title: '线下支付订单'
        })
      }
      if (this.Order_Type === 'flashsale') {
        wx.setNavigationBarTitle({
          title: '秒杀订单'
        })
      }
      if (this.Order_Type === 'spike') {
        wx.setNavigationBarTitle({
          title: '限时抢购订单'
        })
      }
      if (this.Order_Type === 'waimai') {
        wx.setNavigationBarTitle({
          title: '外卖订单'
        })
      }
    },
    onShow() {
      this.page = 1
      this.getOrder(1)
      this.getOrderIndex()
    },
    methods: {
      async getOrderIndex() {
        let arr = await getOrderNum({}, { onlyData: true }).catch(e => {
          error(e.msg || '获取订单角标错误')
        })
        this.orderNumber = arr.type_data[this.Order_Type]
      },
      sendOrder(id) {
        let data = '/pages/order/OrderRetailSend?order_id=' + id
        this.$linkTo(data)
      },
      confirmInput() {
        if (!this.reason) {
          error('拒单原因必填')
          return
        }
        this.show = false
        let data = {
          Order_ID: this.orderId,
          reason: this.reason
        }
        systemRejectOrder(data, { tip: 'loading', mask: true }).then(res => {
          toast('拒单成功')
          this.getOrder(1)
        }).catch(e => {
        })
      },
      async bindLocalSendFail(orderInfo) {
        try {
          const { Order_ID } = orderInfo

          await confirm({
            title: '操作提醒',
            content: '该操作将取消同城配送订单，您需要重新发货才能继续为客户配送该订单。且该操作无法撤回,是否确认?'
          }).catch(res => {
            throw Error('nocare')
          })
          showLoading()
          await dadaExceptionOrderReceive({ Order_ID }).catch(err => {
            throw Error(err.msg)
          })

          this.page = 1
          this.getOrder(1)
        } catch (e) {
          Exception.handle(e)
        } finally {
          hideLoading()
        }
      },
      bindCancelReasonChange(e) {
        console.log(e.$wx)
        const val = e.$wx.detail.value[0]
        this.reasonId = this.cancel_reason_list[val].id
      },
      async subReasonFn() {
        try {
          showLoading('操作中')
          if (!this.reasonId) {
            this.reasonId = this.cancel_reason_list[0].id
          }
          cityExpressOrderReject({
            reason_id: this.reasonId,
            Order_ID: this.current_handle_order
          }).catch(err => Exception.handle(Error(err.msg)))
          toast('操作成功')
          this.$closePop('localSendCancelPopup')
          let _self = this
          setTimeout(function() {
            _self.page = 1
            _self.getOrder(1)
          }, 1000)
        } catch (e) {

        } finally {
          hideLoading()
        }
      },
      async cancelLocalSend(Order_ID) {
        try {
          await confirm({
            title: '操作提醒',
            content: '该操作将取消同城配送订单，您需要重新发货才能继续为客户配送该订单。且该操作无法撤回,是否确认?'
          }).catch(res => {
            throw Error('nocare')
          })

          showLoading()
          const { can_cancel = 0, cancel_reason_list = [] } = await cityExpressCancelReason({ Order_ID }).then(res => res.data).catch(err => {
            Exception.handle(Error(err.msg))
          })
          if (can_cancel) {
            this.current_handle_order = Order_ID
            this.cancel_reason_list = cancel_reason_list
            this.$openPop('localSendCancelPopup')
          } else {
            error('该订单无法取消')
          }
        } catch (e) {
          Exception.handle(e)
        } finally {
          hideLoading()
        }
      },
      rejectOrder(id) {
        this.orderId = id
        this.show = true
      },
      cancelInput() {
        this.reason = ''
        this.show = false
      },
      searchList() {
        this.page = 1
        this.getOrder(1)
      },
      changeTab(item) {
        this.status = item
        this.page = 1
        this.prod_name = ''
        this.getOrder(1)
      },
      async getOrder(order) {
        let data = {
          page: this.page,
          pageSize: this.pageSize,
          source: 'biz',
          prod_name: this.prod_name,
          Order_Type: this.Order_Type
        }
        if (this.status >= 0) {
          data.Order_Status = this.status
        }
        let { data: reqData, totalCount } = await getOrder(data, { tip: '加载中' }).catch(e => {
          throw error('获取列表错误')
        })

        let arr = []

        arr = reqData.map(row => {
          row.dadaFail = false
          if (Array.isArray(row.city_express_order) && row.city_express_order.length > 0 && row.city_express_order[0].order_status === 9) {
            row.dadaFail = true
          }
          if (row.Order_Shipping && typeof row.Order_Shipping === 'string') {
            row.Order_Shipping = JSON.parse(row.Order_Shipping)
          }

          row.isLocal = row.Order_Shipping.Express === '同城配送'

          return row
        })

        if (order === 1) {
          this.list = arr
        } else {
          arr.map(item => {
            this.list.push(item)
          })
        }
        this.totalCount = totalCount

        for (let item of this.list) {
          for (let it of item['prod_list']) {
            if (typeof it.attr_info === 'string' && it.attr_info !== '') {
              it.attr_info = JSON.parse(it.attr_info)
            }
          }
        }
        this.getOrderIndex()
      }
    },
    onReachBottom() {
      if (this.list.length < this.totalCount) {
        this.page++
        this.getOrder()
      }
    }

  })

</script>
<style lang="scss">
  /*@import "../../assets/variables.scss";*/
  /*@import "../../assets/mixins.scss";*/
  .local-cancel-wrap {
    .title {
      padding: 20px 15px;
      position: relative;

      .text {

        text-align: center;
      }

      .sub-btn {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        background: $fun-primary-color;
        font-size: 14px;
        padding: 6px 12px;
        border-radius: 2px;
        color: #fff;
        text-align: center;
      }
    }
  }

  .order-tab {
    width: 710rpx;
    margin: 0 auto;
    height: 74rpx;
    line-height: 74rpx;

    .order-item {
      flex: 1;
      text-align: center;
      position: relative;
    }

    .active {
      color: #00A8FF;
      border-bottom: 2px solid #00A8FF;
    }
  }

  /****/
  ._place {
    color: #c5c5c5;
    font-size: 24rpx;
  }

  .icon-search {
    position: absolute;
    top: 20rpx;
    right: 30rpx;
  }

  .order-search {
    position: relative;
  }

  .input-search {
    display: block;
    box-sizing: border-box;
    flex: 1;
    height: 70rpx;
    line-height: 70rpx;
    box-sizing: border-box;
    padding-left: 30rpx;
    padding-right: 70rpx;
    background-color: #FFFFFF;
    border-radius: 10rpx;
  }

  .erweima {
    height: 70rpx;
    font-size: 13px;
    color: #00A8FF;
    text-align: center;
  }

  /****/
  .list-item {
    width: 710rpx;
    margin: 15px auto 0px;
    background-color: #FFFFFF;
    border-radius: 10rpx;
  }

  .item-top {
    color: #FF0000;
    padding: 0px 10px;
    height: 76rpx;
    line-height: 76rpx;
    border-bottom: 1px solid #E6E6E6;
  }

  /****/
  .thumb {
    width: 200rpx;
    height: 200rpx;
  }

  .item-title {
    line-height: 40rpx;
    height: 80rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .item-sku {
    height: 50rpx;
    line-height: 50rpx;
    background-color: #EDF9FF;
    border-radius: 6rpx;
    padding: 0rpx 20rpx;
  }

  .item-price {
    color: red;
    font-size: 12px;
  }

  /****/
  .item-bottom {
    display: flex;
    justify-content: flex-end;
  }

  .item-btn {
    height: 60rpx;
    line-height: 60rpx;
    width: 150rpx;
    text-align: center;
    border-radius: 6rpx;
    background-color: #EEEEEE;
  }

  .danger-btn {
    background-color: $fun-red-color;
    color: #fff;
  }

  .item-btn-active {
    background-color: #00A8FF !important;
    color: #FFFFff !important;
  }

  .zhezhao {
    left: 0;
    top: 0;
    position: fixed;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .3);
    z-index: 100;

    .input-wrap {
      background: #fff;
      color: #000;
      text-align: center;
      width: 90%;
      margin: 400rpx auto;
      padding: 40rpx 50rpx 30rpx;
      box-sizing: border-box;
      font-size: 28rpx;
      border-radius: 10rpx;

      .input {
        margin: 40rpx 0;
        border: 1px solid #efefef;
        min-height: 20px;
        line-height: 20px;
        padding: 10px 0px;
        text-align: left;
        padding-left: 10rpx;
      }

      .btns {
        display: flex;
        justify-content: space-around;
        height: 60rpx;
        line-height: 60rpx;

        .btn {
          flex: 1;
        }
      }
    }
  }

  .order-tag {
    color: #fff;
    display: block;
    width: 14px;
    height: 14px;
    font-size: 12px;
    text-align: center;
    line-height: 14px;
    border-radius: 50%;
    padding: 2px;
    background: red;
    margin-left: 4px;
    position: absolute;
    top: 0rpx;
    right: -10rpx;
  }


</style>
<config>
  {
  "usingComponents": {
  "wzw-im-tip": "~@/components/wzw-im-tip",
  "popup-layer": "~@/components/popup-layer",
  "icon": "~@/components/icon",
  "fun-img": "~@/components/fun-img"
  }
  }
</config>
