<style lang="scss">
@import "/assets/app.scss";


</style>

<script>
import wepy from '@wepy/core'
// import eventHub from './common/eventHub'
import vuex from '@wepy/x'
wepy.use(vuex)

const validate = require('validate.js')
validate.options = {
  format: 'flat', // 简单模式返回错误信息
  fullMessages: false // 不要在错误提示前面自动加变量名
}
validate.validators.ismust =  function(value, options, key, attributes) {
  // console.log(value)
  // console.log(options)
  // console.log(key)
  // console.log(attributes)
  if (validate.isEmpty(value)) {
    let {label = ''} = options
    if (!label)label = key
    return `${label}不能为空`
  }

  return undefined
}
// 必报错，方便爆出错误
validate.validators.errtip = function(value, options, key, attributes) {
  const {message = `${key}}属性错误`} = options
  return message
}
wx.$validate = validate

require('./common/index')

// import promisify.js  from '@wepy/use-promisify.js'
// wepy.use(promisify.js)

wepy.app({
  hooks: {
    // App 级别 hook，对整个 App 生效
    // 同时存在 Page hook 和 App hook 时，优先执行 Page hook，返回值再交由 App hook 处
    // 'before-setData': function (dirty) {
    //   console.log('setData dirty: ', dirty)
    //   return dirty
    // }
  },
  globalData: {
    userInfo: null
  },

  onLaunch() {
    // this.testAsync()
    // eventHub.$on('app-launch', (...args) => {
    //   console.log('app-launch event emitted, the params are:')
    //   console.log(args)
    // })
  },

  methods: {

    // sleep (s) {
    //   return new Promise((resolve, reject) => {
    //     setTimeout(() => {
    //       resolve('promise resolved')
    //     }, s * 1000)
    //   })
    // },
    //
    // async testAsync () {
    //   let d = await this.sleep(3)
    //   console.log(d)
    // }
  }
})
</script>
<config>
{
    pages: [
      "pages/index",
      "pages/join/BusinessStation",
      "pages/join/SettlementAgreement",
      "pages/join/PersonalCertification",
      "pages/join/CompanyCertification",
      "pages/join/BusinessPay",
      "pages/store/StoreSetting",
      "pages/store/StoreInfo",
      "pages/store/StoreInfoUpda",
      "pages/store/SameCityDelivery",
      "pages/store/SameCityUpda",
      "pages/store/StoreCoupon",
      "pages/store/StoreCouponAdd",
      "pages/store/StoreMarketing",
      "pages/logistics/LogisticsMain",
      "pages/logistics/LogisticsAdds",
      "pages/logistics/LogisticsAddsMail",
      "pages/logistics/LogisticsMethod",
      "pages/logistics/LogisticsUsual",
      "pages/logistics/LogisticsTmpl",
      "pages/logistics/LogisticsPaperless",
      "pages/logistics/ExpressCompany",
      "pages/product/ProductManager",
      "pages/product/form",
      "pages/user/login",
      "pages/demo"
    ],
    window: {
        backgroundTextStyle: "light",
        navigationBarBackgroundColor: "#fff",
        navigationBarTitleText: "本地生活",
        navigationBarTextStyle: "black"
    },
    tabBar: {
        borderStyle: "white",
        color: "#999999",
        selectedColor: "#26C78D",
        list: [
            {
                "pagePath": "pages/index",
                "iconPath": "/static/tabbar/find.png",
                "selectedIconPath": "/static/tabbar/find.png",
                "text": "发现"
            },
            {
                "pagePath": "pages/index",
                "iconPath": "/static/tabbar/live.png",
                "selectedIconPath": "/static/tabbar/live.png",
                "text": "商品管理"
            },
            {
                "pagePath": "pages/index",
                "iconPath": "/static/tabbar/praise.png",
                "selectedIconPath": "/static/tabbar/praise.png",
                "text": "店铺设置"
            },
            {
                "pagePath": "pages/index",
                "iconPath": "/static/tabbar/notify.png",
                "selectedIconPath": "/static/tabbar/notify.png",
                "text": "入驻"
            },
            {
                "pagePath": "pages/index",
                "iconPath": "/static/tabbar/user.png",
                "selectedIconPath": "/static/tabbar/user.png",
                "text": "店铺信息"
            }
        ]
    },
}
</config>
